{"version":3,"sources":["upload.server.controller.js"],"names":[],"mappings":"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","file":"upload.server.controller-compiled.js","sourcesContent":["\n\nconst path = require(\"path\");\nconst fs = require('fs');\nconst htmlGenerator = require(__dirname + '/../../build/Release/cppToHTML.node');\nconst metricAnalyzer = require(__dirname + '/../../build/Release/metricAnalyzer.node');\nconst templateHTMLPath = \"./Service/CppService/CppToHTML/HTMLgenerator/template.htm\";\nconst multer  = require('multer');\n\nconst uploadCppPath = \"userUploadFiles/cppFiles\";\nconst upload = multer({ dest: __dirname}).any();\n\n\nexports.render = function(req, res) {\n\n    res.render('upload'); // send .ejs file to the client\n\n\n};\n\nexports.receiveFiles = function (req, res, next) {\n    console.log(\"hello\");\n    // multer process in the below block\n    upload(req,res, function(err) {\n        if (err) {\n            console.log(\"error happened when multer is processing\");\n            console.log(err);\n            res.status(500).end();\n            return ;\n        }\n\n        var userIP = req.hostname;\n        makeUserSpecDir(userIP);               // generate a dir for each user\n        var newFilePaths = [];\n        for (let i = 0; i < req.files.length; i++) {\n\n            // files will be put into path: uploadCppPath with a uuid name and without suffix\n            // need to rename file using fs module\n            renameFile(req.files[i], userIP, newFilePaths);\n        }\n\n        var destHTMLPath =  uploadCppPath + \"/\" + userIP;\n        var searchPath =  destHTMLPath;\n\n        // call c++ services\n        analyzeCodeMetrics( searchPath);\n        generateHTML(templateHTMLPath, destHTMLPath, searchPath);\n\n\n\n        // delete all the cpp files eventually\n        deleteFiles(newFilePaths);\n\n        // send success status code back\n        exports.render(req, res);\n\n    })\n\n\n};\n\nconst analyzeCodeMetrics = function (path) {\n    metricAnalyzer(path);\n}\nconst makeUserSpecDir = function(userIP) {\n    let path =__dirname + `/../../${uploadCppPath}/${userIP}`;\n    console.log(`user's storage path: ${path}`);\n    if (!fs.existsSync(path)) {\n        console.log(\"user's storage path didn't exist before\");\n        fs.mkdir( path, function(err) {\n            if (err) {\n                console.log(\"error in mkdir\")\n                throw err;\n                res.status(500).end();\n            }\n            console.log(`mkdir for /${userIP} success!`);\n        })\n    }\n}\n\n// fs.rename(oldPath, newPath,callback);\nconst renameFile = function (file, userIP, newFilePaths) {\n    var newPath =  __dirname + `/../../${uploadCppPath}/${userIP}/`  + file.originalname;\n    fs.renameSync(file.path, newPath);\n    newFilePaths.push(newPath);\n}\n\nconst deleteFiles = function(newFilePaths) {\n    for (let path of newFilePaths) {\n        fs.unlinkSync(path);\n    }\n    let metricsResultFile = __dirname + `/../../${uploadCppPath}/localhost/`  + 'metricsResult'\n    fs.renameSync(metricsResultFile + \".cpp.html\" , metricsResultFile + \".html\");\n    fs.unlinkSync(metricsResultFile + \".cpp\");\n\n}\n\nconst generateHTML = function(templateHTMLPath, destHTMLPath, searchPath) {\n\n    let isFinished = htmlGenerator(templateHTMLPath, destHTMLPath, searchPath);\n    return isFinished;\n}\n\n"]}