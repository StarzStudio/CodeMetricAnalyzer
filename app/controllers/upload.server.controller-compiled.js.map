{"version":3,"sources":["upload.server.controller.js"],"names":[],"mappings":"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","file":"upload.server.controller-compiled.js","sourcesContent":["\n\nconst path = require(\"path\");\nconst fs = require('fs');\nconst htmlGenerator = require(__dirname + '/../../build/Release/cppToHTML.node');\nconst metricAnalyzer = require(__dirname + '/../../build/Release/metricAnalyzer.node');\nconst templateHTMLPath = \"./Service/CppService/CppToHTML/HTMLgenerator/template.htm\";\nconst multer  = require('multer');\n\nconst uploadCppPath = \"userUploadFiles/cppFiles\";\nconst upload = multer({ dest : __dirname}).any();\n\nvar projectController = require('../controllers/project.server.controller');\n\n//const projectController = require(__dirname + '/project.server.controller.js');\n\nexports.render = function(req, res) {\n\n    res.sendfile('./public/upload/views/upload.html');\n\n\n};\n\nexports.receiveFiles = function (req, res, next) {\n    // multer process in the below block\n    upload(req,res, function(err) {\n        if (err) {\n            console.log(\"error happened when multer is processing\");\n            console.log(err);\n            res.status(500).end();\n            return ;\n        }\n\n        //var userIP = req.ip || 'anonymous';\n        var userIP = req.ip;\n        makeUserSpecDir(userIP);               // generate a dir for each user\n        var cppFilePaths = [];\n        var htmlFilePaths = [];\n        for (let i = 0; i < req.files.length; i++) {\n\n            // files will be put into path: uploadCppPath with a uuid name and without suffix\n            // need to rename file using fs module\n            renameFile(req.files[i], userIP, cppFilePaths, htmlFilePaths);\n        }\n\n        var destHTMLPath =  uploadCppPath + \"/\" + userIP;\n        var searchPath =  destHTMLPath;\n\n        // call c++ services\n\n        // store all the files metrics in JSON format in an array\n        var fileMetricsJSON = analyzeCodeMetrics( searchPath);\n        var htmlContentCollection = generateHTML(templateHTMLPath, destHTMLPath, searchPath);\n        let fileInfos = [];\n        for (let i = 0; i < fileMetricsJSON.length; i++) {\n            let fileInfo = {};\n            fileInfo.name = JSON.parse(fileMetricsJSON[i]).fileName;\n            fileInfo.htmlContent = htmlContentCollection[i];\n            fileInfo.metrics = JSON.stringify(JSON.parse(fileMetricsJSON[i]).metricValue);\n            fileInfos.push(fileInfo);\n        }\n\n\n        // this step should be after analyzeCodeMetrics(), because it need to wait analyzeCodeMetrics generate\n        // metricsResult.cpp, then make it to .html\n\n\n        // delete all the cpp files eventually\n        deleteFiles(cppFilePaths);\n\n        // send success status code back\n       // res.status(200).redirect('index/!#/projects');\n\n        req.fileInfos = fileInfos;\n\n        getProjectSize(req);\n\n        projectController.create(req, res);\n\n    })\n\n\n};\n\nconst getProjectSize = function (req) {\n    let size = 0;\n    for (let f of req.files) {\n        size += f.size;\n    }\n    req.projectSize = size;\n}\n\nconst analyzeCodeMetrics = function (path) {\n    let result = metricAnalyzer(path);\n    return result;\n}\nconst makeUserSpecDir = function(userIP) {\n    let path =__dirname + `/../../${uploadCppPath}/${userIP}`;\n    console.log(`user's storage path: ${path}`);\n    if (!fs.existsSync(path)) {\n        console.log(\"user's storage path didn't exist before\");\n        fs.mkdir( path, function(err) {\n            if (err) {\n                console.log(\"error in mkdir\")\n                throw err;\n                res.status(500).end();\n            }\n            console.log(`mkdir for /${userIP} success!`);\n        })\n    }\n}\n\n// fs.rename(oldPath, newPath,callback);\nconst renameFile = function (file, userIP, cppFilePaths, htmlFilePaths) {\n    let cppPath =  __dirname + `/../../${uploadCppPath}/${userIP}/`  + file.originalname;\n    let htmlPath = `/${userIP}/`  + file.originalname + '.html';\n    fs.renameSync(file.path, cppPath);\n    cppFilePaths.push(cppPath);\n    htmlFilePaths.push(htmlPath);\n}\n\nconst deleteFiles = function(newFilePaths) {\n    for (let path of newFilePaths) {\n        fs.unlinkSync(path);\n    }\n    // let metricsResultFile = __dirname + `/../../${uploadCppPath}/localhost/`  + 'metricsResult'\n    // fs.renameSync(metricsResultFile + \".cpp.html\" , metricsResultFile + \".html\");\n    // fs.unlinkSync(metricsResultFile + \".cpp\");\n\n}\n\nconst generateHTML = function(templateHTMLPath, destHTMLPath, searchPath) {\n\n    let isFinished = htmlGenerator(templateHTMLPath, destHTMLPath, searchPath);\n    return isFinished;\n}\n\n"]}