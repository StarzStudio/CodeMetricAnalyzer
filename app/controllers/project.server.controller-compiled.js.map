{"version":3,"sources":["project.server.controller.js"],"names":[],"mappings":";;AAAA;;;AAGA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,UAAU,SAAS,KAAT,CAAe,SAAf,CAAhB;AACA,IAAM,OAAO,SAAS,KAAT,CAAe,MAAf,CAAb;;AAEA,IAAM,kBAAkB,SAAlB,eAAkB,CAAU,GAAV,EAAe;AACnC,QAAI,IAAI,MAAR,EAAgB;AACZ,aAAK,IAAI,OAAT,IAAoB,IAAI,MAAxB,EAAgC;AAC5B,gBAAI,IAAI,MAAJ,CAAW,OAAX,EAAoB,OAAxB,EAAiC,OAAO,IAAI,MAAJ,CAAW,OAAX,EAAoB,OAA3B;AACpC;AACJ,KAJD,MAIO;AACH,eAAO,sBAAP;AACH;AACJ,CARD;;AAYA,QAAQ,MAAR,GAAiB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACjC,QAAI,UAAU,IAAI,OAAJ,EAAd;AADiC;AAAA;AAAA;;AAAA;AAEjC,6BAAqB,IAAI,SAAzB,8HAAoC;AAAA,gBAA3B,QAA2B;;AAChC;AACA;AACA;AACA,gBAAI,OAAO,IAAI,IAAJ,CAAS,QAAT,CAAX;AACA,oBAAQ,KAAR,CAAc,IAAd,CAAmB,IAAnB;AACH;;AAED;AAViC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWjC,YAAQ,IAAR,CAAa,UAAU,GAAV,EAAe;AACxB,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS,gBAAgB,GAAhB;AADe,aAArB,CAAP;AAGH,SAJD,MAIO;AACH,gBAAI,IAAJ,CAAS,OAAT;AACH;AACJ,KARD;AASH,CApBD;;AA0BA,QAAQ,IAAR,GAAe,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/B,YAAQ,GAAR,CAAY,SAAZ;AACA,YAAQ,IAAR,GAAe,IAAf,CAAoB,UAApB,EAAgC,IAAhC,CAAqC,UAAU,GAAV,EAAe,QAAf,EAAyB;AAC1D,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS,gBAAgB,GAAhB;AADe,aAArB,CAAP;AAGH,SAJD,MAIO;AACH,gBAAI,IAAJ,CAAS,QAAT;AACH;AACJ,KARD;AASH,CAXD;;AAcA,QAAQ,WAAR,GAAsB,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B,EAA1B,EAA8B;AAChD,YAAQ,QAAR,CAAiB,EAAjB,EAAqB,IAArB,CAA0B,UAAU,GAAV,EAAe,OAAf,EAAwB;AAC9C,YAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP;AACT,YAAI,CAAC,OAAL,EAAc,OAAO,KAAK,IAAI,KAAJ,CAAU,4BAC9B,EADoB,CAAL,CAAP;AAEd,YAAI,OAAJ,GAAc,OAAd;AACA;AACH,KAND;AAOH,CARD;;AAUA,QAAQ,IAAR,GAAe,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC9B,QAAI,IAAJ,CAAS,IAAI,OAAb;AACH,CAFD;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"project.server.controller-compiled.js","sourcesContent":["/**\n * Created by zhouxing on 5/5/17.\n */\nconst mongoose = require('mongoose');\nconst Project = mongoose.model('Project');\nconst File = mongoose.model('File');\n\nconst getErrorMessage = function (err) {\n    if (err.errors) {\n        for (var errName in err.errors) {\n            if (err.errors[errName].message) return err.errors[errName].message;\n        }\n    } else {\n        return 'Unknown server error';\n    }\n};\n\n\n\nexports.create = function (req, res) {\n    var project = new Project();\n    for (let fileInfo of req.fileInfos) {\n        // let fileName = fileInfo.name;\n        // let fileURL = fileInfo.fileURL;\n        // let fileMetrics = fileInfo.metrics;\n        let file = new File(fileInfo);\n        project.files.push(file);\n    }\n\n    //project.creator = req.user;\n    project.save(function (err) {\n        if (err) {\n            return res.status(400).send({\n                message: getErrorMessage(err)\n            });\n        } else {\n            res.json(project);\n        }\n    });\n};\n\n\n\n\n\nexports.list = function (req, res) {\n    console.log(\"in list\");\n    Project.find().sort('-created').exec(function (err, projects) {\n        if (err) {\n            return res.status(400).send({\n                message: getErrorMessage(err)\n            });\n        } else {\n            res.json(projects);\n        }\n    });\n};\n\n\nexports.projectByID = function (req, res, next, id) {\n    Project.findById(id).exec(function (err, project) {\n        if (err) return next(err);\n        if (!project) return next(new Error('Failed to load project '\n            + id));\n        req.project = project;\n        next();\n    });\n};\n\nexports.read = function(req, res) {\n    res.json(req.project);\n};\n\n// exports.update = function(req, res, next) {\n//     var article = req.article;\n//     article.title = req.body.title;\n//     article.content = req.body.content;\n//     article.save(function(err) {\n//         if (err) {\n//             return res.status(400).send({\n//                 message: getErrorMessage(err)\n//             });\n//         } else {\n//             res.json(article);\n//         }\n//     });\n//     next();\n// };\n//\n// exports.delete = function(req, res) {\n//     var article = req.article;\n//     article.remove(function(err) {\n//         if (err) {\n//             return res.status(400).send({\n//                 message: getErrorMessage(err)\n//             });\n//         } else {\n//             res.json(article);\n//         }\n//     });\n// };"]}