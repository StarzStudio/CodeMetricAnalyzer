{"version":3,"sources":["user.server.model.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,QAAQ,UAAR,CAAf;AAAA,IACI,SAAS,SAAS,MADtB;;AAGA,IAAI,aAAa,IAAI,MAAJ,CAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAO,MATiB;AAUxB,aAAS;AACL,cAAM,IADD;AAEL,iBAAS,KAAK;AAFT;AAVe,CAAX,CAAjB;;AAiBA,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvfile":"user.server.model-compiled.js","sourcesContent":["var mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nvar UserSchema = new Schema({\n    // firstName: {\n    //     type: String,\n    //     required: 'first name cannot be blank'\n    // },\n    // lastName: {\n    //     type: String,\n    //     required: 'last name cannot be blank'\n    // },\n    name : String,\n    created: {\n        type: Date,\n        default: Date.now\n    },\n    //projectIds: [String]\n});\n\nmongoose.model('User', UserSchema);\n\n// var UserSchema = new Schema({\n//     firstName: String,\n//     lastName: String,\n//     email: String,\n//     username: {\n//         type: String,\n//         trim: true,\n//         unique: true,\n//         required: true\n//     },\n//     password: {\n//         type: String,\n//         validate: [\n//             function (password) {\n//                 return password.length >= 6;\n//             },\n//             'Password should be longer'\n//         ]\n//     },\n//     created: {\n//         type: Date,\n//         default: Date.now\n//     },\n//     website: {\n//         type: String,\n//         get: function (url) {\n//             if (!url) {\n//                 return url;\n//             } else {\n//                 if (url.indexOf('http://') !== 0 && url.indexOf('https://') !== 0) {\n//                     url = 'http://' + url;\n//                 }\n//                 return url;\n//             }\n//         }\n//     },\n//\n//     email: {\n//         type: String,\n//         index: true,\n//         match: /.+\\@.+\\..+/\n//     },\n//     role: {\n//         type: String,\n//         enum: ['Admin', 'Owner', 'User']\n//     }\n// });\n//\n// UserSchema.virtual('fullName').get(function () {\n//     return this.firstName + ' ' + this.lastName;\n// }).set(function (fullName) {\n//     var splitName = fullName.split(' ');\n//     this.firstName = splitName[0] || '';\n//     this.lastName = splitName[1] || '';\n// });\n//\n// UserSchema.statics.findOneByUsername = function (username,\n//     callback) {\n//     this.findOne({ username: new RegExp(username, 'i') }, callback);\n// };\n//\n// UserSchema.methods.authenticate = function (password) {\n//     return this.password === password;\n// };\n//\n// UserSchema.methods.authenticate = function (password) {\n//     return this.password === password;\n// };\n//\n// // UserSchema.pre('save', function (next) {\n// //     if (...) {\n// //     next()\n// // } else {\n// //     next(new Error('An Error Occured'));\n// // }\n// // });\n//\n// // UserSchema.post('save', function (next) {\n// //     if (this.isNew) {\n// //         console.log('A new user was created.');\n// //     } else {\n// //         console.log('A user updated is details.');\n// //     }\n// // });\n//\n// UserSchema.set('toJSON', { getters: true, virtuals: true });\n//\n// mongoose.model('User', UserSchema);\n//\n// var PostSchema = new Schema({\n//     title: {\n//         type: String,\n//         required: true\n//     },\n//     content: {\n//         type: String,\n//         required: true\n//     },\n//     author: {\n//         type: Schema.ObjectId,\n//         ref: 'User'\n//     }\n// });\n//\n// mongoose.model('Post', PostSchema);"]}