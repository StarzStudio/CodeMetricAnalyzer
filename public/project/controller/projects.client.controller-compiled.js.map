{"version":3,"sources":["projects.client.controller.js"],"names":[],"mappings":"AAAA;;;;AAKA;AACA;;AAEA;;AACA,QAAQ,MAAR,CAAe,UAAf,EAA2B,UAA3B,CAAsC,oBAAtC,EAA4D,CAAC,QAAD,EAAY,cAAZ,EAA4B,WAA5B,EAAyC,UAAzC,EAAoD,UAApD,EACxD,UAAS,MAAT,EAAiB,YAAjB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,QAApD,EAA8D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAO,IAAP,GAAc,YAAW;AACrB;AACA,eAAO,QAAP,GAAkB,SAAS,KAAT,EAAlB;AACH,KAHD;;AAKA;AACA,WAAO,OAAP,GAAiB,YAAW;AACxB;AACA,eAAO,OAAP,GAAiB,SAAS,GAAT,CAAa;AAC1B,uBAAW,aAAa;AADE,SAAb,CAAjB;AASH,KAXD;;AAaA,WAAO,SAAP,GAAmB,UAAS,IAAT,EAAc;;AAE7B,YAAI,cAAc,IAAlB;AACA,eAAO,iBAAP,GAA2B,KAAK,KAAL,CAAW,YAAY,OAAvB,CAA3B;AACA,eAAO,kBAAP,GAA4B,YAAY,WAAxC;AACA,YAAI,kBAAkB,QAAQ,OAAR,CAAiB,SAAS,aAAT,CAAuB,aAAvB,CAAjB,CAAtB;AACA,wBAAgB,KAAhB;AACA,YAAI,OAAO,SAAS,cAAc,OAAO,kBAArB,GAA0C,QAAnD,EAA8D,MAA9D,CAAX;AACA,wBAAgB,MAAhB,CAAuB,IAAvB;AACA,eAAO,IAAP,GAAc,CAAd;AACH,KAVD;;AAYA,WAAO,qBAAP,GAA+B,YAAY;AACvC,gBAAQ,GAAR,CAAY,OAAO,OAAP,CAAe,KAA3B;;AAEA,eAAO,aAAP,GAAuB,EAAvB;AACA,eAAO,kBAAP,GAA4B,EAA5B;AACA,YAAI,QAAQ,OAAO,OAAP,CAAe,KAA3B;AACA,aAAK,IAAI,IAAI,CAAb,EAAiB,IAAI,MAAM,MAA3B,EAAmC,GAAnC,EAAwC;AACpC,mBAAO,aAAP,GAAuB,OAAO,aAAP,CAAqB,MAArB,CAA4B,KAAK,KAAL,CAAW,MAAM,CAAN,EAAS,OAApB,EAA6B,kBAAzD,CAAvB;AACA,mBAAO,kBAAP,GAA4B,OAAO,kBAAP,CAA0B,MAA1B,CAAiC,KAAK,KAAL,CAAW,MAAM,CAAN,EAAS,OAApB,EAA6B,oBAA9D,CAA5B;AACH;AACJ,KAVD;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,MAAP,GAAgB,UAAS,OAAT,EAAkB;AAC9B,YAAG,QAAQ,sBAAR,CAAH,EAAoC;AAChC;AACA,gBAAI,OAAJ,EAAa;AACT;AACA,wBAAQ,OAAR,CAAgB,YAAW;AACvB;AACA,yBAAK,IAAI,CAAT,IAAc,OAAO,QAArB,EAA+B;AAC3B,4BAAI,OAAO,QAAP,CAAgB,CAAhB,MAAuB,OAA3B,EAAoC;AAChC,mCAAO,QAAP,CAAgB,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B;AACH;AACJ;AACJ,iBAPD;AAQH,aAVD,MAUO;AACH;AACA,uBAAO,OAAP,CAAe,OAAf,CAAuB,YAAW;AAC9B,8BAAU,IAAV,CAAe,aAAf;AACH,iBAFD;AAGH;AACD,qBAAS,IAAT,GAAc,aAAd;AACH;AAGJ,KAvBD;;AAyBA;AACA;AACA;AACH,CA5GuD,CAA5D","file":"projects.client.controller-compiled.js","sourcesContent":["/**\n * Created by zhouxing on 5/6/17.\n */\n\n\n// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Create the 'articles' controller\nangular.module('projects').controller('ProjectsController', ['$scope',  '$routeParams', '$location', 'Projects','$compile',\n    function($scope, $routeParams, $location, Projects, $compile) {\n        // Expose the Authentication service\n        // $scope.authentication = Authentication;\n\n        // Create a new controller method for creating new articles\n        // $scope.create = function() {\n        //     // Use the form fields to create a new article $resource object\n        //     var project = new Projects({\n        //         name: this.name,\n        //     });\n        //\n        //     // Use the article '$save' method to send an appropriate POST request\n        //     project.$save(function(response) {\n        //         // If an article was created successfully, redirect the user to the article's page\n        //         $location.path('articles/' + response._id);\n        //     }, function(errorResponse) {\n        //         // Otherwise, present the user with the error message\n        //         $scope.error = errorResponse.data.message;\n        //     });\n        // };\n\n        // Create a new controller method for retrieving a list of articles\n        $scope.find = function() {\n            // Use the article 'query' method to send an appropriate GET request\n            $scope.projects = Projects.query();\n        };\n\n        // Create a new controller method for retrieving a single article\n        $scope.findOne = function() {\n            // Use the project 'get' method to send an appropriate GET request\n            $scope.project = Projects.get({\n                projectId: $routeParams.projectId\n            });\n\n\n\n\n\n\n        };\n\n        $scope.clickFile = function(file){\n\n            let currentFile = file;\n            $scope.currentFileMetric = JSON.parse(currentFile.metrics);\n            $scope.currentFileContent = currentFile.htmlContent;\n            let sourceContainer = angular.element( document.querySelector('#fileSource'));\n            sourceContainer.empty();\n            var node = $compile('<div><br>' + $scope.currentFileContent + '</div>' )($scope);\n            sourceContainer.append(node);\n            $scope.show = 0;\n        };\n\n        $scope.calculateTotalBadFunc = function () {\n            console.log($scope.project.files);\n\n            $scope.overLinedFunc = [];\n            $scope.overComplexityFunc = [];\n            let files = $scope.project.files;\n            for (let i = 0 ; i < files.length; i++) {\n                $scope.overLinedFunc = $scope.overLinedFunc.concat(JSON.parse(files[i].metrics).overlinedFunctions);\n                $scope.overComplexityFunc = $scope.overComplexityFunc.concat(JSON.parse(files[i].metrics).overComplexFunctions);\n            }\n        };\n\n\n        // // Create a new controller method for updating a single article\n        // $scope.update = function() {\n        //     // Use the article '$update' method to send an appropriate PUT request\n        //     $scope.article.$update(function() {\n        //         // If an article was updated successfully, redirect the user to the article's page\n        //         $location.path('articles/' + $scope.article._id);ar\n        //     }, function(errorResponse) {\n        //         // Otherwise, present the user with the error message\n        //         $scope.error = errorResponse.data.message;\n        //     });\n        // };\n        //\n        // Create a new controller method for deleting a single article\n        $scope.delete = function(project) {\n            if(confirm('Delete this project?')) {\n                // If an project was sent to the method, delete it\n                if (project) {\n                    // Use the project '$remove' method to delete the article\n                    project.$remove(function() {\n                        // Remove the article from the articles list\n                        for (var i in $scope.projects) {\n                            if ($scope.projects[i] === project) {\n                                $scope.projects.splice(i, 1);\n                            }\n                        }\n                    });\n                } else {\n                    // Otherwise, use the article '$remove' method to delete the article\n                    $scope.project.$remove(function() {\n                        $location.path('#!/projects');\n                    });\n                }\n                location.href='#!/projects';\n            }\n\n\n        };\n\n        // $scope.showMetrics = function() {\n        //     $scope.projectMetrics =\n        // }\n    }\n]);\n"]}