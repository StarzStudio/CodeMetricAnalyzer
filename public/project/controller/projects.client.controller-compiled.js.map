{"version":3,"sources":["projects.client.controller.js"],"names":[],"mappings":"AAAA;;;;AAKA;AACA;;AAEA;;AACA,QAAQ,MAAR,CAAe,UAAf,EAA2B,UAA3B,CAAsC,oBAAtC,EAA4D,CAAC,QAAD,EAAW,cAAX,EAA2B,WAA3B,EAAwC,UAAxC,EACxD,UAAS,MAAT,EAAiB,YAAjB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAO,IAAP,GAAc,YAAW;AACrB;AACA,eAAO,QAAP,GAAkB,SAAS,KAAT,EAAlB;AACH,KAHD;;AAKA;AACA,WAAO,OAAP,GAAiB,YAAW;AACxB;AACA,eAAO,OAAP,GAAiB,SAAS,GAAT,CAAa;AAC1B,uBAAW,aAAa;AADE,SAAb,CAAjB;;AAIA,eAAO,cAAP,GAAwB;AACpB,6BAAkB,EADE;AAEpB,kCAAuB;AAFH,SAAxB;;AANwB;AAAA;AAAA;;AAAA;AAWxB,iCAAc,OAAO,OAAP,CAAe,KAA7B,8HAAoC;AAAA,oBAA3B,CAA2B;;AAChC,uBAAO,cAAP,CAAsB,aAAtB,GAAsC,OAAO,cAAP,CAAsB,aAAtB,CAAoC,MAApC,CAA2C,EAAE,OAAF,CAAU,kBAArD,CAAtC;AACA,uBAAO,cAAP,CAAsB,kBAAtB,GAA2C,OAAO,cAAP,CAAsB,kBAAtB,CAAyC,MAAzC,CAAgD,EAAE,OAAF,CAAU,oBAA1D,CAA3C;AACH;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB3B,KAjBD;;AAmBA,WAAO,SAAP,GAAmB,UAAS,IAAT,EAAc;AAC7B,YAAI,cAAc,IAAlB;AACA,eAAO,iBAAP,GAA2B,KAAK,KAAL,CAAW,YAAY,OAAvB,CAA3B;AACA,eAAO,cAAP,GAAwB,YAAY,OAApC;AACA,gBAAQ,GAAR,CAAa,OAAO,iBAApB;AACA,eAAO,IAAP,GAAc,CAAd;AACH,KAND;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACH,CA3FuD,CAA5D","file":"projects.client.controller-compiled.js","sourcesContent":["/**\n * Created by zhouxing on 5/6/17.\n */\n\n\n// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Create the 'articles' controller\nangular.module('projects').controller('ProjectsController', ['$scope', '$routeParams', '$location', 'Projects',\n    function($scope, $routeParams, $location, Projects) {\n        // Expose the Authentication service\n        // $scope.authentication = Authentication;\n\n        // Create a new controller method for creating new articles\n        // $scope.create = function() {\n        //     // Use the form fields to create a new article $resource object\n        //     var project = new Projects({\n        //         name: this.name,\n        //     });\n        //\n        //     // Use the article '$save' method to send an appropriate POST request\n        //     project.$save(function(response) {\n        //         // If an article was created successfully, redirect the user to the article's page\n        //         $location.path('articles/' + response._id);\n        //     }, function(errorResponse) {\n        //         // Otherwise, present the user with the error message\n        //         $scope.error = errorResponse.data.message;\n        //     });\n        // };\n\n        // Create a new controller method for retrieving a list of articles\n        $scope.find = function() {\n            // Use the article 'query' method to send an appropriate GET request\n            $scope.projects = Projects.query();\n        };\n\n        // Create a new controller method for retrieving a single article\n        $scope.findOne = function() {\n            // Use the project 'get' method to send an appropriate GET request\n            $scope.project = Projects.get({\n                projectId: $routeParams.projectId\n            });\n\n            $scope.projectMetrics = {\n                \"overLinedFunc\" : [],\n                \"overComplexityFunc\" : []\n            };\n\n            for (let f of $scope.project.files) {\n                $scope.projectMetrics.overLinedFunc = $scope.projectMetrics.overLinedFunc.concat(f.metrics.overlinedFunctions);\n                $scope.projectMetrics.overComplexityFunc = $scope.projectMetrics.overComplexityFunc.concat(f.metrics.overComplexFunctions);\n            }\n\n\n        };\n\n        $scope.clickFile = function(file){\n            let currentFile = file;\n            $scope.currentFileMetric = JSON.parse(currentFile.metrics);\n            $scope.currentFileURL = currentFile.fileURL;\n            console.log( $scope.currentFileMetric);\n            $scope.show = 0;\n        };\n        // // Create a new controller method for updating a single article\n        // $scope.update = function() {\n        //     // Use the article '$update' method to send an appropriate PUT request\n        //     $scope.article.$update(function() {\n        //         // If an article was updated successfully, redirect the user to the article's page\n        //         $location.path('articles/' + $scope.article._id);\n        //     }, function(errorResponse) {\n        //         // Otherwise, present the user with the error message\n        //         $scope.error = errorResponse.data.message;\n        //     });\n        // };\n        //\n        // // Create a new controller method for deleting a single article\n        // $scope.delete = function(article) {\n        //     // If an article was sent to the method, delete it\n        //     if (article) {\n        //         // Use the article '$remove' method to delete the article\n        //         article.$remove(function() {\n        //             // Remove the article from the articles list\n        //             for (var i in $scope.articles) {\n        //                 if ($scope.articles[i] === article) {\n        //                     $scope.articles.splice(i, 1);\n        //                 }\n        //             }\n        //         });\n        //     } else {\n        //         // Otherwise, use the article '$remove' method to delete the article\n        //         $scope.article.$remove(function() {\n        //             $location.path('articles');\n        //         });\n        //     }\n        // };\n\n        // $scope.showMetrics = function() {\n        //     $scope.projectMetrics =\n        // }\n    }\n]);\n"]}