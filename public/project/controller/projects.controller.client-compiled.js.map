{"version":3,"sources":["projects.controller.client.js"],"names":[],"mappings":"AAAA;;;;AAKA;AACA;;AAEA;;AACA,QAAQ,MAAR,CAAe,UAAf,EAA2B,UAA3B,CAAsC,oBAAtC,EAA4D,CAAC,QAAD,EAAW,cAAX,EAA2B,WAA3B,EAAwC,UAAxC,EACxD,UAAS,MAAT,EAAiB,YAAjB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD;AAChD;AACA;;AAEA;AACA,WAAO,MAAP,GAAgB,YAAW;AACvB;AACA,YAAI,UAAU,IAAI,QAAJ,CAAa;AACvB,mBAAO,KAAK,KADW;AAEvB,qBAAS,KAAK;AAFS,SAAb,CAAd;;AAKA;AACA,gBAAQ,KAAR,CAAc,UAAS,QAAT,EAAmB;AAC7B;AACA,sBAAU,IAAV,CAAe,cAAc,SAAS,GAAtC;AACH,SAHD,EAGG,UAAS,aAAT,EAAwB;AACvB;AACA,mBAAO,KAAP,GAAe,cAAc,IAAd,CAAmB,OAAlC;AACH,SAND;AAOH,KAfD;;AAiBA;AACA,WAAO,IAAP,GAAc,YAAW;AACrB;AACA,eAAO,QAAP,GAAkB,SAAS,KAAT,EAAlB;AACH,KAHD;;AAKA;AACA,WAAO,OAAP,GAAiB,YAAW;AACxB;AACA,eAAO,OAAP,GAAiB,SAAS,GAAT,CAAa;AAC1B,uBAAW,aAAa;AADE,SAAb,CAAjB;AAGH,KALD;;AAOA;AACA,WAAO,MAAP,GAAgB,YAAW;AACvB;AACA,eAAO,OAAP,CAAe,OAAf,CAAuB,YAAW;AAC9B;AACA,sBAAU,IAAV,CAAe,cAAc,OAAO,OAAP,CAAe,GAA5C;AACH,SAHD,EAGG,UAAS,aAAT,EAAwB;AACvB;AACA,mBAAO,KAAP,GAAe,cAAc,IAAd,CAAmB,OAAlC;AACH,SAND;AAOH,KATD;;AAWA;AACA,WAAO,MAAP,GAAgB,UAAS,OAAT,EAAkB;AAC9B;AACA,YAAI,OAAJ,EAAa;AACT;AACA,oBAAQ,OAAR,CAAgB,YAAW;AACvB;AACA,qBAAK,IAAI,CAAT,IAAc,OAAO,QAArB,EAA+B;AAC3B,wBAAI,OAAO,QAAP,CAAgB,CAAhB,MAAuB,OAA3B,EAAoC;AAChC,+BAAO,QAAP,CAAgB,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B;AACH;AACJ;AACJ,aAPD;AAQH,SAVD,MAUO;AACH;AACA,mBAAO,OAAP,CAAe,OAAf,CAAuB,YAAW;AAC9B,0BAAU,IAAV,CAAe,UAAf;AACH,aAFD;AAGH;AACJ,KAlBD;AAmBH,CArEuD,CAA5D","file":"projects.controller.client-compiled.js","sourcesContent":["/**\n * Created by zhouxing on 5/6/17.\n */\n\n\n// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Create the 'articles' controller\nangular.module('projects').controller('ProjectsController', ['$scope', '$routeParams', '$location', 'Projects',\n    function($scope, $routeParams, $location, Projects) {\n        // Expose the Authentication service\n        // $scope.authentication = Authentication;\n\n        // Create a new controller method for creating new articles\n        $scope.create = function() {\n            // Use the form fields to create a new article $resource object\n            var article = new Projects({\n                title: this.title,\n                content: this.content\n            });\n\n            // Use the article '$save' method to send an appropriate POST request\n            article.$save(function(response) {\n                // If an article was created successfully, redirect the user to the article's page\n                $location.path('articles/' + response._id);\n            }, function(errorResponse) {\n                // Otherwise, present the user with the error message\n                $scope.error = errorResponse.data.message;\n            });\n        };\n\n        // Create a new controller method for retrieving a list of articles\n        $scope.find = function() {\n            // Use the article 'query' method to send an appropriate GET request\n            $scope.articles = Articles.query();\n        };\n\n        // Create a new controller method for retrieving a single article\n        $scope.findOne = function() {\n            // Use the article 'get' method to send an appropriate GET request\n            $scope.article = Articles.get({\n                articleId: $routeParams.articleId\n            });\n        };\n\n        // Create a new controller method for updating a single article\n        $scope.update = function() {\n            // Use the article '$update' method to send an appropriate PUT request\n            $scope.article.$update(function() {\n                // If an article was updated successfully, redirect the user to the article's page\n                $location.path('articles/' + $scope.article._id);\n            }, function(errorResponse) {\n                // Otherwise, present the user with the error message\n                $scope.error = errorResponse.data.message;\n            });\n        };\n\n        // Create a new controller method for deleting a single article\n        $scope.delete = function(article) {\n            // If an article was sent to the method, delete it\n            if (article) {\n                // Use the article '$remove' method to delete the article\n                article.$remove(function() {\n                    // Remove the article from the articles list\n                    for (var i in $scope.articles) {\n                        if ($scope.articles[i] === article) {\n                            $scope.articles.splice(i, 1);\n                        }\n                    }\n                });\n            } else {\n                // Otherwise, use the article '$remove' method to delete the article\n                $scope.article.$remove(function() {\n                    $location.path('articles');\n                });\n            }\n        };\n    }\n]);\n"]}