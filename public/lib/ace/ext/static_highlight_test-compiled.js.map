{"version":3,"sources":["static_highlight_test.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,OAAP,KAAmB,WAAvB,EAAoC;AAChC,YAAQ,YAAR;AACA,YAAQ,iBAAR;AACH;;AAED,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,SAAS,QAAQ,QAAR,CAAb;AACA,QAAI,cAAc,QAAQ,oBAAR,CAAlB;AACA,QAAI,iBAAiB,QAAQ,oBAAR,EAA8B,IAAnD;AACA,QAAI,WAAW,QAAQ,cAAR,EAAwB,IAAvC;;AAEA;AACA,WAAO,OAAP,GAAiB;AACb,iBAAS,KADI;;AAGb,+BAAuB,2BAAS,IAAT,EAAe;AAClC,gBAAI,QAAQ,QAAQ,mBAAR,CAAZ;AACA,gBAAI,UAAU,CACV,wBADU,EAEV,GAFU,EAGV,IAHU,EAIV,4BAJU,EAKV,sCALU,EAMV,GANU,EAOZ,IAPY,CAOP,IAPO,CAAd;AAQA,gBAAI,OAAO,IAAI,cAAJ,EAAX;;AAEA,gBAAI,SAAS,YAAY,MAAZ,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,KAAlC,CAAb;AACA,mBAAO,KAAP,CAAa,OAAO,IAApB,EAA0B,kHACpB,iKADoB,GAEpB,4IAFoB,GAGpB,6IAHoB,GAIpB,8kBAJoB,GAKpB,wrBALoB,GAMpB,6IANoB,GAOpB,cAPN;AAQA,mBAAO,EAAP,CAAU,CAAC,CAAC,OAAO,GAAnB;AACA;AACH,SA1BY;;AA4Bb,uCAA+B,gCAAS,IAAT,EAAe;AAC1C,gBAAI,QAAQ,QAAQ,mBAAR,CAAZ;AACA,gBAAI,UAAU,CACV,wBADU,EAEV,GAFU,EAGV,IAHU,EAIV,4BAJU,EAKV,sCALU,EAMV,GANU,EAOZ,IAPY,CAOP,IAPO,CAAd;AAQA,gBAAI,OAAO,IAAI,cAAJ,EAAX;;AAEA,gBAAI,SAAS,YAAY,MAAZ,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,KAAlC,CAAb;;AAEA,mBAAO,EAAP,CAAU,OAAO,GAAP,CAAW,OAAX,CAAmB,MAAM,OAAzB,MAAsC,CAAC,CAAjD;;AAEA;AACH,SA7CY;;AA+Cb,yDAAiD,gDAAS,IAAT,EAAe;AAC5D,gBAAI,QAAQ,QAAQ,mBAAR,CAAZ;AACA,gBAAI,UAAU,CACV,wBADU,EAEV,GAFU,EAGV,IAHU,EAIV,4BAJU,EAKV,sCALU,EAMV,GANU,EAOZ,IAPY,CAOP,IAPO,CAAd;AAQA,gBAAI,OAAO,IAAI,cAAJ,EAAX;;AAEA,gBAAI,SAAS,YAAY,MAAZ,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,KAAlC,CAAb;AACA,mBAAO,KAAP,CAAa,CAAC,CAAC,OAAO,IAAP,CAAY,KAAZ,CAAkB,4BAAlB,CAAf,EAAgE,IAAhE;;AAEA;AACH,SA/DY;;AAiEb,2CAAmC,qCAAS,IAAT,EAAe;AAC9C,gBAAI,QAAQ,QAAQ,mBAAR,CAAZ;AACA,gBAAI,UAAU,YAAd;AACA,gBAAI,OAAO,IAAI,QAAJ,EAAX;;AAEA,gBAAI,SAAS,YAAY,MAAZ,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,KAAlC,CAAb;AACA,mBAAO,EAAP,CAAU,OAAO,IAAP,CAAY,OAAZ,CAAoB,OAApB,KAAgC,CAAC,CAA3C;;AAEA;AACH;AA1EY,KAAjB;AA6EC,CAtFD;;AAwFA,IAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,QAAQ,IAAxD,EAA8D;AAC1D,YAAQ,SAAR,EAAmB,IAAnB,CAAwB,QAAxB,CAAiC,OAAO,OAAxC,EAAiD,IAAjD;AACH","file":"static_highlight_test-compiled.js","sourcesContent":["if (typeof process !== \"undefined\") {\n    require(\"amd-loader\");\n    require(\"../test/mockdom\");\n}\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar assert = require(\"assert\");\nvar highlighter = require(\"./static_highlight\");\nvar JavaScriptMode = require(\"../mode/javascript\").Mode;\nvar TextMode = require(\"../mode/text\").Mode;\n\n// Execution ORDER: test.setUpSuite, setUp, testFn, tearDown, test.tearDownSuite\nmodule.exports = {\n    timeout: 10000,\n\n    \"test simple snippet\": function(next) {\n        var theme = require(\"../theme/tomorrow\");\n        var snippet = [\n            \"/** this is a function\",\n            \"*\",\n            \"*/\",\n            \"function hello (a, b, c) {\",\n            \"    console.log(a * b + c + 'sup$');\",\n            \"}\"\n        ].join(\"\\n\");\n        var mode = new JavaScriptMode();\n\n        var result = highlighter.render(snippet, mode, theme);\n        assert.equal(result.html, \"<div class='ace-tomorrow'><div class='ace_static_highlight ace_show_gutter' style='counter-reset:ace_line 0'>\" \n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span><span class='ace_comment ace_doc'>/** this is a function</span>\\n</div>\"\n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span><span class='ace_comment ace_doc'>*</span>\\n</div>\"\n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span><span class='ace_comment ace_doc'>*/</span>\\n</div>\"\n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span><span class='ace_storage ace_type'>function</span> <span class='ace_entity ace_name ace_function'>hello</span> <span class='ace_paren ace_lparen'>(</span><span class='ace_variable ace_parameter'>a</span><span class='ace_punctuation ace_operator'>, </span><span class='ace_variable ace_parameter'>b</span><span class='ace_punctuation ace_operator'>, </span><span class='ace_variable ace_parameter'>c</span><span class='ace_paren ace_rparen'>)</span> <span class='ace_paren ace_lparen'>{</span>\\n</div>\"\n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span>    <span class='ace_storage ace_type'>console</span><span class='ace_punctuation ace_operator'>.</span><span class='ace_support ace_function ace_firebug'>log</span><span class='ace_paren ace_lparen'>(</span><span class='ace_identifier'>a</span> <span class='ace_keyword ace_operator'>*</span> <span class='ace_identifier'>b</span> <span class='ace_keyword ace_operator'>+</span> <span class='ace_identifier'>c</span> <span class='ace_keyword ace_operator'>+</span> <span class='ace_string'>'sup$'</span><span class='ace_paren ace_rparen'>)</span><span class='ace_punctuation ace_operator'>;</span>\\n</div>\"\n            + \"<div class='ace_line'><span class='ace_gutter ace_gutter-cell' unselectable='on'></span><span class='ace_paren ace_rparen'>}</span>\\n</div>\"\n            + \"</div></div>\");\n        assert.ok(!!result.css);\n        next();\n    },\n\n    \"test css from theme is used\": function(next) {\n        var theme = require(\"../theme/tomorrow\");\n        var snippet = [\n            \"/** this is a function\",\n            \"*\",\n            \"*/\",\n            \"function hello (a, b, c) {\",\n            \"    console.log(a * b + c + 'sup?');\",\n            \"}\"\n        ].join(\"\\n\");\n        var mode = new JavaScriptMode();\n\n        var result = highlighter.render(snippet, mode, theme);\n\n        assert.ok(result.css.indexOf(theme.cssText) !== -1);\n\n        next();\n    },\n\n    \"test theme classname should be in output html\": function(next) {\n        var theme = require(\"../theme/tomorrow\");\n        var snippet = [\n            \"/** this is a function\",\n            \"*\",\n            \"*/\",\n            \"function hello (a, b, c) {\",\n            \"    console.log(a * b + c + 'sup?');\",\n            \"}\"\n        ].join(\"\\n\");\n        var mode = new JavaScriptMode();\n\n        var result = highlighter.render(snippet, mode, theme);\n        assert.equal(!!result.html.match(/<div class='ace-tomorrow'>/), true);\n\n        next();\n    },\n    \n    \"test js string replace specials\": function(next) {\n        var theme = require(\"../theme/tomorrow\");\n        var snippet = \"$'$1$2$$$&\";\n        var mode = new TextMode();\n\n        var result = highlighter.render(snippet, mode, theme);\n        assert.ok(result.html.indexOf(snippet) != -1);\n\n        next();\n    }\n};\n\n});\n\nif (typeof module !== \"undefined\" && module === require.main) {\n    require(\"asyncjs\").test.testcase(module.exports).exec();\n}\n"]}