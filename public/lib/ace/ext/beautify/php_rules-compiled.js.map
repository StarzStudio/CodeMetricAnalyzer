{"version":3,"sources":["php_rules.js"],"names":[],"mappings":"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","file":"php_rules-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2012, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\nvar TokenIterator = require(\"ace/token_iterator\").TokenIterator;\nexports.newLines = [{\n    type: 'support.php_tag',\n    value: '<?php'\n}, {\n    type: 'support.php_tag',\n    value: '<?'\n}, {\n    type: 'support.php_tag',\n    value: '?>'\n}, {\n    type: 'paren.lparen',\n    value: '{',\n    indent: true\n}, {\n    type: 'paren.rparen',\n    breakBefore: true,\n    value: '}',\n    indent: false\n}, {\n    type: 'paren.rparen',\n    breakBefore: true,\n    value: '})',\n    indent: false,\n    dontBreak: true\n}, {\n    type: 'comment'\n}, {\n    type: 'text',\n    value: ';'\n}, {\n    type: 'text',\n    value: ':',\n    context: 'php'\n}, {\n    type: 'keyword',\n    value: 'case',\n    indent: true,\n    dontBreak: true\n}, {\n    type: 'keyword',\n    value: 'default',\n    indent: true,\n    dontBreak: true\n}, {\n    type: 'keyword',\n    value: 'break',\n    indent: false,\n    dontBreak: true\n}, {\n    type: 'punctuation.doctype.end',\n    value: '>'\n}, {\n    type: 'meta.tag.punctuation.end',\n    value: '>'\n}, {\n    type: 'meta.tag.punctuation.begin',\n    value: '<',\n    blockTag: true,\n    indent: true,\n    dontBreak: true\n}, {\n    type: 'meta.tag.punctuation.begin',\n    value: '</',\n    indent: false,\n    breakBefore: true,\n    dontBreak: true\n}, {\n    type: 'punctuation.operator',\n    value: ';'\n}];\n\nexports.spaces = [{\n    type: 'xml-pe',\n    prepend: true\n},{\n    type: 'entity.other.attribute-name',\n    prepend: true\n}, {\n    type: 'storage.type',\n    value: 'var',\n    append: true\n}, {\n    type: 'storage.type',\n    value: 'function',\n    append: true\n}, {\n    type: 'keyword.operator',\n    value: '='\n}, {\n    type: 'keyword',\n    value: 'as',\n    prepend: true,\n    append: true\n}, {\n    type: 'keyword',\n    value: 'function',\n    append: true\n}, {\n    type: 'support.function',\n    next: /[^\\(]/,\n    append: true\n}, {\n    type: 'keyword',\n    value: 'or',\n    append: true,\n    prepend: true\n}, {\n    type: 'keyword',\n    value: 'and',\n    append: true,\n    prepend: true\n}, {\n    type: 'keyword',\n    value: 'case',\n    append: true\n}, {\n    type: 'keyword.operator',\n    value: '||',\n    append: true,\n    prepend: true\n}, {\n    type: 'keyword.operator',\n    value: '&&',\n    append: true,\n    prepend: true\n}];\nexports.singleTags = ['!doctype','area','base','br','hr','input','img','link','meta'];\n\nexports.transform = function(iterator, maxPos, context) {\n    var token = iterator.getCurrentToken();\n    \n    var newLines = exports.newLines;\n    var spaces = exports.spaces;\n    var singleTags = exports.singleTags;\n\n    var code = '';\n    \n    var indentation = 0;\n    var dontBreak = false;\n    var tag;\n    var lastTag;\n    var lastToken = {};\n    var nextTag;\n    var nextToken = {};\n    var breakAdded = false;\n    var value = '';\n\n    while (token!==null) {\n        console.log(token);\n\n        if( !token ){\n            token = iterator.stepForward();\n            continue;\n        }\n\n        //change syntax\n        //php\n        if( token.type == 'support.php_tag' && token.value != '?>' ){\n            context = 'php';\n        }\n        else if( token.type == 'support.php_tag' && token.value == '?>' ){\n            context = 'html';\n        }\n        //css\n        else if( token.type == 'meta.tag.name.style' && context != 'css' ){\n            context = 'css';\n        }\n        else if( token.type == 'meta.tag.name.style' && context == 'css' ){\n            context = 'html';\n        }\n        //js\n        else if( token.type == 'meta.tag.name.script' && context != 'js' ){\n            context = 'js';\n        }\n        else if( token.type == 'meta.tag.name.script' && context == 'js' ){\n            context = 'html';\n        }\n\n        nextToken = iterator.stepForward();\n\n        //tag name\n        if (nextToken && nextToken.type.indexOf('meta.tag.name') == 0) {\n            nextTag = nextToken.value;\n        }\n\n        //don't linebreak\n        if ( lastToken.type == 'support.php_tag' && lastToken.value == '<?=') {\n            dontBreak = true;\n        }\n\n        //lowercase\n        if (token.type == 'meta.tag.name') {\n            token.value = token.value.toLowerCase();\n        }\n\n        //trim spaces\n        if (token.type == 'text') {\n            token.value = token.value.trim();\n        }\n\n        //skip empty tokens\n        if (!token.value) {\n            token = nextToken;\n            continue;\n        }\n\n        //put spaces back in\n        value = token.value;\n        for (var i in spaces) {\n            if (\n                token.type == spaces[i].type &&\n                (!spaces[i].value || token.value == spaces[i].value) &&\n                (\n                    nextToken &&\n                    (!spaces[i].next || spaces[i].next.test(nextToken.value))\n                )\n            ) {\n                if (spaces[i].prepend) {\n                    value = ' ' + token.value;\n                }\n\n                if (spaces[i].append) {\n                    value += ' ';\n                }\n            }\n        }\n\n        //tag name\n        if (token.type.indexOf('meta.tag.name') == 0) {\n            tag = token.value;\n            //console.log(tag);\n        }\n\n        //new line before\n        breakAdded = false;\n\n        //outdent\n        for (i in newLines) {\n            if (\n                token.type == newLines[i].type &&\n                (\n                    !newLines[i].value ||\n                    token.value == newLines[i].value\n                ) &&\n                (\n                    !newLines[i].blockTag ||\n                    singleTags.indexOf(nextTag) === -1\n                ) &&\n                (\n                    !newLines[i].context ||\n                    newLines[i].context === context\n                )\n            ) {\n                if (newLines[i].indent === false) {\n                    indentation--;\n                }\n\n                if (\n                    newLines[i].breakBefore &&\n                    ( !newLines[i].prev || newLines[i].prev.test(lastToken.value) )\n                ) {\n                    code += \"\\n\";\n                    breakAdded = true;\n\n                    //indent\n                    for (i = 0; i < indentation; i++) {\n                        code += \"\\t\";\n                    }\n                }\n\n                break;\n            }\n        }\n\n        if (dontBreak===false) {\n            for (i in newLines) {\n                if (\n                    lastToken.type == newLines[i].type &&\n                    (\n                        !newLines[i].value || lastToken.value == newLines[i].value\n                    ) &&\n                    (\n                        !newLines[i].blockTag ||\n                        singleTags.indexOf(tag) === -1\n                    ) &&\n                    (\n                        !newLines[i].context ||\n                        newLines[i].context === context\n                    )\n                ) {\n                    if (newLines[i].indent === true) {\n                        indentation++;\n                    }\n\n                    if (!newLines[i].dontBreak  && !breakAdded) {\n                        code += \"\\n\";\n\n                        //indent\n                        for (i = 0; i < indentation; i++) {\n                            code += \"\\t\";\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n\n        code += value;\n\n        //linebreaks back on after end short php tag\n        if ( lastToken.type == 'support.php_tag' && lastToken.value == '?>' ) {\n            dontBreak = false;\n        }\n\n        //next token\n        lastTag = tag;\n\n        lastToken = token;\n\n        token = nextToken;\n\n        if (token===null) {\n            break;\n        }\n    }\n    \n    return code;\n};\n\n\n\n});"]}