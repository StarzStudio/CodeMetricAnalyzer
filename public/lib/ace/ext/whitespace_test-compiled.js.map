{"version":3,"sources":["whitespace_test.js"],"names":[],"mappings":"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","file":"whitespace_test-compiled.js","sourcesContent":["if (typeof process !== \"undefined\") {\n    require(\"amd-loader\");\n    require(\"../test/mockdom\");\n}\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar assert = require(\"assert\");\nvar EditSession = require(\"../edit_session\").EditSession;\nvar whitespace = require(\"./whitespace\");\n\n// Execution ORDER: test.setUpSuite, setUp, testFn, tearDown, test.tearDownSuite\nmodule.exports = {\n    timeout: 10000,\n\n    \"test tab detection\": function(next) {\n        var s = new EditSession([\n            \"define({\",\n            \"\\tfoo:1,\",\n            \"\\tbar:2,\",\n            \"\\tbaz:{,\",\n            \"\\t\\tx:3\",\n            \"\\t}\",\n            \"})\"\n        ]);\n         \n        var indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \"\\t\");\n        assert.equal(indent.length, undefined);\n        \n        s.insert({row: 0, column: 0}, \"  \");\n        indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \"\\t\");\n        assert.equal(indent.length, undefined);\n        s.doc.removeInLine(0, 0, 2);\n        \n        s.insert({row: 0, column: 0}, \"x\\n    y\\n        z\\n\");\n        indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \"\\t\");\n        assert.equal(indent.length, 4);\n        \n        s.setValue(\"\");\n        indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.ok(!indent);\n        \n        next();\n    },\n\n    \"test empty session\": function(next) {\n        var s = new EditSession([\n            \"define({\",\n            \"foo:1,\",\n            \"})\"\n        ]);\n        var indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.ok(!indent);\n        s.insert({row: 1, column: 0}, \"    x\\n    \");\n        \n        indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \" \");\n        assert.equal(indent.length, 4);\n        \n        next();\n    },\n    \n    \"!test one line\": function(next) {\n        var s = new EditSession([\n            \"define({\",\n            \"    foo:1,\",\n            \"})\"\n        ]);\n        var indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \" \");\n        assert.equal(indent.length, 4);\n        \n        next();\n    },\n    \n    \"test 1 width indents\": function(next) {\n        var s = new EditSession([\n            \"define({\",\n            \"    foo:1,\",\n            \"})\",\n            \"define({\",\n            \"    bar:1,\",\n            \"})\",\n            \"     t\",\n            \"      t\",\n            \"     t\",\n            \"      t\",\n            \"     t\",\n            \"      t\",\n            \"     t\",\n            \"      t\"\n        ]);\n        var indent = whitespace.$detectIndentation(s.doc.$lines);\n        // assert.equal(indent.ch, \" \");\n        // assert.equal(indent.length, 4);\n        \n        s = new EditSession([\n            \"{\",\n            \" foo:1,\",\n            \" bar: {\",\n            \"  baz:2\",\n            \" }\",\n            \"}\"\n        ]);\n        indent = whitespace.$detectIndentation(s.doc.$lines);\n        assert.equal(indent.ch, \" \");\n        assert.equal(indent.length, 1);\n        \n        next();\n    }\n\n};\n\n});\n\nif (typeof module !== \"undefined\" && module === require.main) {\n    require(\"asyncjs\").test.testcase(module.exports).exec();\n}\n"]}