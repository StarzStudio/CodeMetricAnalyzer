{"version":3,"sources":["language_tools.js"],"names":[],"mappings":"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","file":"language_tools-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2012, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar snippetManager = require(\"../snippets\").snippetManager;\nvar Autocomplete = require(\"../autocomplete\").Autocomplete;\nvar config = require(\"../config\");\nvar lang = require(\"../lib/lang\");\nvar util = require(\"../autocomplete/util\");\n\nvar textCompleter = require(\"../autocomplete/text_completer\");\nvar keyWordCompleter = {\n    getCompletions: function(editor, session, pos, prefix, callback) {\n        if (session.$mode.completer) {\n            return session.$mode.completer.getCompletions(editor, session, pos, prefix, callback);\n        }\n        var state = editor.session.getState(pos.row);\n        var completions = session.$mode.getCompletions(state, session, pos, prefix);\n        callback(null, completions);\n    }\n};\n\nvar snippetCompleter = {\n    getCompletions: function(editor, session, pos, prefix, callback) {\n        var snippetMap = snippetManager.snippetMap;\n        var completions = [];\n        snippetManager.getActiveScopes(editor).forEach(function(scope) {\n            var snippets = snippetMap[scope] || [];\n            for (var i = snippets.length; i--;) {\n                var s = snippets[i];\n                var caption = s.name || s.tabTrigger;\n                if (!caption)\n                    continue;\n                completions.push({\n                    caption: caption,\n                    snippet: s.content,\n                    meta: s.tabTrigger && !s.name ? s.tabTrigger + \"\\u21E5 \" : \"snippet\",\n                    type: \"snippet\"\n                });\n            }\n        }, this);\n        callback(null, completions);\n    },\n    getDocTooltip: function(item) {\n        if (item.type == \"snippet\" && !item.docHTML) {\n            item.docHTML = [\n                \"<b>\", lang.escapeHTML(item.caption), \"</b>\", \"<hr></hr>\",\n                lang.escapeHTML(item.snippet)\n            ].join(\"\");\n        }\n    }\n};\n\nvar completers = [snippetCompleter, textCompleter, keyWordCompleter];\n// Modifies list of default completers\nexports.setCompleters = function(val) {\n    completers.length = 0;\n    if (val) completers.push.apply(completers, val);\n};\nexports.addCompleter = function(completer) {\n    completers.push(completer);\n};\n\n// Exports existing completer so that user can construct his own set of completers.\nexports.textCompleter = textCompleter;\nexports.keyWordCompleter = keyWordCompleter;\nexports.snippetCompleter = snippetCompleter;\n\nvar expandSnippet = {\n    name: \"expandSnippet\",\n    exec: function(editor) {\n        return snippetManager.expandWithTab(editor);\n    },\n    bindKey: \"Tab\"\n};\n\nvar onChangeMode = function(e, editor) {\n    loadSnippetsForMode(editor.session.$mode);\n};\n\nvar loadSnippetsForMode = function(mode) {\n    var id = mode.$id;\n    if (!snippetManager.files)\n        snippetManager.files = {};\n    loadSnippetFile(id);\n    if (mode.modes)\n        mode.modes.forEach(loadSnippetsForMode);\n};\n\nvar loadSnippetFile = function(id) {\n    if (!id || snippetManager.files[id])\n        return;\n    var snippetFilePath = id.replace(\"mode\", \"snippets\");\n    snippetManager.files[id] = {};\n    config.loadModule(snippetFilePath, function(m) {\n        if (m) {\n            snippetManager.files[id] = m;\n            if (!m.snippets && m.snippetText)\n                m.snippets = snippetManager.parseSnippetFile(m.snippetText);\n            snippetManager.register(m.snippets || [], m.scope);\n            if (m.includeScopes) {\n                snippetManager.snippetMap[m.scope].includeScopes = m.includeScopes;\n                m.includeScopes.forEach(function(x) {\n                    loadSnippetFile(\"ace/mode/\" + x);\n                });\n            }\n        }\n    });\n};\n\nvar doLiveAutocomplete = function(e) {\n    var editor = e.editor;\n    var hasCompleter = editor.completer && editor.completer.activated;\n\n    // We don't want to autocomplete with no prefix\n    if (e.command.name === \"backspace\") {\n        if (hasCompleter && !util.getCompletionPrefix(editor))\n            editor.completer.detach();\n    }\n    else if (e.command.name === \"insertstring\") {\n        var prefix = util.getCompletionPrefix(editor);\n        // Only autocomplete if there's a prefix that can be matched\n        if (prefix && !hasCompleter) {\n            if (!editor.completer) {\n                // Create new autocompleter\n                editor.completer = new Autocomplete();\n            }\n            // Disable autoInsert\n            editor.completer.autoInsert = false;\n            editor.completer.showPopup(editor);\n        }\n    }\n};\n\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableBasicAutocompletion: {\n        set: function(val) {\n            if (val) {\n                if (!this.completers)\n                    this.completers = Array.isArray(val)? val: completers;\n                this.commands.addCommand(Autocomplete.startCommand);\n            } else {\n                this.commands.removeCommand(Autocomplete.startCommand);\n            }\n        },\n        value: false\n    },\n    /**\n     * Enable live autocomplete. If the value is an array, it is assumed to be an array of completers\n     * and will use them instead of the default completers.\n     */\n    enableLiveAutocompletion: {\n        set: function(val) {\n            if (val) {\n                if (!this.completers)\n                    this.completers = Array.isArray(val)? val: completers;\n                // On each change automatically trigger the autocomplete\n                this.commands.on('afterExec', doLiveAutocomplete);\n            } else {\n                this.commands.removeListener('afterExec', doLiveAutocomplete);\n            }\n        },\n        value: false\n    },\n    enableSnippets: {\n        set: function(val) {\n            if (val) {\n                this.commands.addCommand(expandSnippet);\n                this.on(\"changeMode\", onChangeMode);\n                onChangeMode(null, this);\n            } else {\n                this.commands.removeCommand(expandSnippet);\n                this.off(\"changeMode\", onChangeMode);\n            }\n        },\n        value: false\n    }\n});\n});\n"]}