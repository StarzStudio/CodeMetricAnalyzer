{"version":3,"sources":["generate_settings_menu.js"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;;;;;;;;AAQA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AACA,QAAI,OAAO,QAAQ,qBAAR,CAAX;AACA,QAAI,uBAAuB,QAAQ,2BAAR,EAAqC,oBAAhE;AACA,QAAI,kBAAkB,QAAQ,qBAAR,EAA+B,eAArD;;AAEA;;;;;;;AAOA,WAAO,OAAP,CAAe,oBAAf,GAAsC,SAAS,oBAAT,CAA+B,MAA/B,EAAuC;AACzE;;;;;;AAMA,YAAI,WAAW,EAAf;AACA;;;;;;;;;AASA,iBAAS,mBAAT,GAA+B;AAC3B,qBAAS,IAAT,CAAc,UAAS,CAAT,EAAY,CAAZ,EAAe;AACzB,oBAAI,IAAI,EAAE,YAAF,CAAe,UAAf,CAAR;AACA,oBAAI,IAAI,EAAE,YAAF,CAAe,UAAf,CAAR;AACA,uBAAO,EAAE,aAAF,CAAgB,CAAhB,CAAP;AACH,aAJD;AAKH;AACD;;;;;;;AAOA,iBAAS,YAAT,GAAwB;AACpB,gBAAI,UAAU,SAAS,aAAT,CAAuB,KAAvB,CAAd;AACA,oBAAQ,YAAR,CAAqB,IAArB,EAA2B,kBAA3B;AACA,qBAAS,OAAT,CAAiB,UAAS,OAAT,EAAkB;AAC/B,wBAAQ,WAAR,CAAoB,OAApB;AACH,aAFD;;AAIA,gBAAI,KAAK,QAAQ,WAAR,CAAoB,SAAS,aAAT,CAAuB,KAAvB,CAApB,CAAT;AACA,gBAAI,UAAU,QAAQ,WAAR,EAAqB,OAAnC;AACA,eAAG,KAAH,CAAS,OAAT,GAAmB,KAAnB;AACA,eAAG,WAAH,GAAiB,iBAAiB,OAAlC;;AAEA,mBAAO,OAAP;AACH;AACD;;;;;;;;;;;;;;;;;AAiBA,iBAAS,cAAT,CAAwB,GAAxB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,GAAzC,EAA8C;AAC1C,gBAAI,EAAJ;AACA,gBAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;AACA,gBAAI,YAAJ,CAAiB,UAAjB,EAA6B,IAA7B;AACA,gBAAI,YAAJ,CAAiB,OAAjB,EAA0B,sBAA1B;AACA,gBAAI,YAAJ,CAAiB,OAAjB,EAA0B,cAA1B;;AAEA,gBAAI,WAAJ,CAAgB,KAAK,WAAL,CACZ,KAAK,OAAL,CAAa,MAAb,EAAqB,EAArB,EAAyB,OAAzB,CAAiC,UAAjC,EAA6C,KAA7C,EAAoD,IAApD,EADY,EAEZ,IAFY,CAAhB;;AAKA,gBAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACpB,qBAAK,KAAK,eAAL,CAAqB,IAArB,EAA2B,GAA3B,EAAgC,IAAhC,CAAL;AACA,mBAAG,gBAAH,CAAoB,QAApB,EAA8B,UAAS,CAAT,EAAY;AACtC,wBAAG;AACC,+BAAO,WAAP,CAAmB,EAAE,MAAF,CAAS,EAA5B,EAAgC,OAAhC,CAAwC,UAAS,CAAT,EAAY;AAChD,gCAAG,EAAE,WAAF,KAAkB,EAAE,MAAF,CAAS,WAA9B,EAA2C;AACvC,uCAAO,EAAE,QAAT;AACH;AACJ,yBAJD;AAKA,4BAAI,EAAE,MAAF,CAAS,EAAb,EAAiB,EAAE,MAAF,CAAS,KAA1B;AACH,qBAPD,CAOE,OAAO,GAAP,EAAY;AACV,8BAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACH;AACJ,iBAXD;AAYH,aAdD,MAcO,IAAG,OAAO,GAAP,KAAe,SAAlB,EAA6B;AAChC,qBAAK,KAAK,cAAL,CAAoB,IAApB,EAA0B,GAA1B,EAA+B,IAA/B,CAAL;AACA,mBAAG,gBAAH,CAAoB,QAApB,EAA8B,UAAS,CAAT,EAAY;AACtC,wBAAG;AACC;AACA,4BAAI,EAAE,MAAF,CAAS,EAAb,EAAiB,CAAC,CAAC,EAAE,MAAF,CAAS,OAA5B;AACH,qBAHD,CAGE,OAAO,GAAP,EAAY;AACV,8BAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACH;AACJ,iBAPD;AAQH,aAVM,MAUA;AACH;AACA;AACA;AACA,qBAAK,KAAK,WAAL,CAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,CAAL;AACA,mBAAG,gBAAH,CAAoB,QAApB,EAA8B,UAAS,CAAT,EAAY;AACtC,wBAAG;AACC,4BAAG,EAAE,MAAF,CAAS,KAAT,KAAmB,MAAtB,EAA8B;AAC1B,gCAAI,EAAE,MAAF,CAAS,EAAb,EAAiB,IAAjB;AACH,yBAFD,MAEO,IAAG,EAAE,MAAF,CAAS,KAAT,KAAmB,OAAtB,EAA+B;AAClC,gCAAI,EAAE,MAAF,CAAS,EAAb,EAAiB,KAAjB;AACH,yBAFM,MAEA;AACH,gCAAI,EAAE,MAAF,CAAS,EAAb,EAAiB,EAAE,MAAF,CAAS,KAA1B;AACH;AACJ,qBARD,CAQE,OAAO,GAAP,EAAY;AACV,8BAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACH;AACJ,iBAZD;AAaH;AACD,eAAG,KAAH,CAAS,OAAT,GAAmB,cAAnB;AACA,gBAAI,WAAJ,CAAgB,EAAhB;AACA,mBAAO,GAAP;AACH;AACD;;;;;;;;;;;;;;AAcA,iBAAS,YAAT,CAAsB,IAAtB,EAA4B,GAA5B,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C;AACvC,gBAAI,MAAM,OAAO,WAAP,CAAmB,IAAnB,CAAV;AACA,gBAAI,aAAa,IAAI,EAAJ,GAAjB;AACA,gBAAI,QAAO,UAAP,yCAAO,UAAP,MAAqB,QAAzB,EACI,aAAa,WAAW,GAAxB;AACJ,gBAAI,OAAJ,CAAY,UAAS,MAAT,EAAiB;AACzB,oBAAI,OAAO,KAAP,KAAiB,UAArB,EACI,OAAO,QAAP,GAAkB,UAAlB;AACP,aAHD;AAIA,mBAAO,eAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,GAAhC,CAAP;AACH;AACD;;;;;;;;;;;;;;;;;;AAkBA,iBAAS,SAAT,CAAmB,MAAnB,EAA2B;AACvB,gBAAI,OAAO,OAAO,YAAlB;AACA,gBAAI,MAAM,OAAO,SAAjB;AACA,gBAAI,OAAO,OAAO,UAAlB;AACA,gBAAI,GAAJ;AACA,gBAAI,KAAK,KAAK,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAT;AACA,gBAAG,OAAO,WAAP,CAAmB,IAAnB,MAA6B,SAAhC,EAA2C;AACvC;AACA,yBAAS,IAAT,CAAc,aAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,EAA9B,CAAd;AACH,aAHD,MAGO,IAAG,OAAO,IAAI,EAAJ,CAAP,KAAmB,UAAtB,EAAkC;AACrC;AACA,oBAAI;AACA,0BAAM,IAAI,EAAJ,GAAN;AACA,wBAAG,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAlB,EAA4B;AACxB;AACA;AACA;AACA,8BAAM,IAAI,GAAV;AACH;AACD;AACA;AACA,6BAAS,IAAT,CACI,eAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,GAAhC,CADJ;AAGH,iBAbD,CAaE,OAAO,CAAP,EAAU;AACR;AACA;AACH;AACJ;AACJ;AACD,6BAAqB,MAArB;AACA;AACA,wBAAgB,MAAhB,EAAwB,OAAxB,CAAgC,UAAS,MAAT,EAAiB;AAC7C;AACA,sBAAU,MAAV;AACH,SAHD;AAIA;AACA;AACA;AACA;AACA,eAAO,cAAP;AACH,KA7MD;AA+MC,CA5ND","file":"generate_settings_menu-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2013 Matthew Christopher Kastor-Inare III, Atropa Inc. Intl\n * All rights reserved.\n *\n * Contributed to Ajax.org under the BSD license.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define*/\n\n/**\n * Generates the settings menu\n * @fileOverview Generates the settings menu.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\ndefine(function(require, exports, module) {\n'use strict';\nvar egen = require('./element_generator');\nvar addEditorMenuOptions = require('./add_editor_menu_options').addEditorMenuOptions;\nvar getSetFunctions = require('./get_set_functions').getSetFunctions;\n\n/**\n * Generates an interactive menu with settings useful to end users.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param {ace.Editor} editor An instance of the ace editor.\n */\nmodule.exports.generateSettingsMenu = function generateSettingsMenu (editor) {\n    /**\n     * container for dom elements that will go in the menu.\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     */\n    var elements = [];\n    /**\n     * Sorts the menu entries (elements var) so they'll appear in alphabetical order\n     *  the sort is performed based on the value of the contains property\n     *  of each element. Since this is an `array.sort` the array is sorted\n     *  in place.\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     */\n    function cleanupElementsList() {\n        elements.sort(function(a, b) {\n            var x = a.getAttribute('contains');\n            var y = b.getAttribute('contains');\n            return x.localeCompare(y);\n        });\n    }\n    /**\n     * Wraps all dom elements contained in the elements var with a single\n     *  div.\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     */\n    function wrapElements() {\n        var topmenu = document.createElement('div');\n        topmenu.setAttribute('id', 'ace_settingsmenu');\n        elements.forEach(function(element) {\n            topmenu.appendChild(element);\n        });\n        \n        var el = topmenu.appendChild(document.createElement('div'));\n        var version = require(\"../../ace\").version;\n        el.style.padding = \"1em\";\n        el.textContent = \"Ace version \" + version;\n        \n        return topmenu;\n    }\n    /**\n     * Creates a new menu entry.\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     * @param {object} obj This is a reference to the object containing the\n     *  set function. It is used to set up event listeners for when the\n     *  menu options change.\n     * @param {string} clss Maps to the class of the dom element. This is\n     *  the name of the object containing the set function e.g. `editor`,\n     *  `session`, `renderer`.\n     * @param {string} item  This is the set function name. It maps to the\n     *  id of the dom element (check, select, input) and to the \"contains\"\n     *  attribute of the div holding both the element and its label.\n     * @param {mixed} val This is the value of the setting. It is mapped to\n     *  the dom element's value, checked, or selected option accordingly.\n     */\n    function createNewEntry(obj, clss, item, val) {\n        var el;\n        var div = document.createElement('div');\n        div.setAttribute('contains', item);\n        div.setAttribute('class', 'ace_optionsMenuEntry');\n        div.setAttribute('style', 'clear: both;');\n\n        div.appendChild(egen.createLabel(\n            item.replace(/^set/, '').replace(/([A-Z])/g, ' $1').trim(),\n            item\n        ));\n\n        if (Array.isArray(val)) {\n            el = egen.createSelection(item, val, clss);\n            el.addEventListener('change', function(e) {\n                try{\n                    editor.menuOptions[e.target.id].forEach(function(x) {\n                        if(x.textContent !== e.target.textContent) {\n                            delete x.selected;\n                        }\n                    });\n                    obj[e.target.id](e.target.value);\n                } catch (err) {\n                    throw new Error(err);\n                }\n            });\n        } else if(typeof val === 'boolean') {\n            el = egen.createCheckbox(item, val, clss);\n            el.addEventListener('change', function(e) {\n                try{\n                    // renderer['setHighlightGutterLine'](true);\n                    obj[e.target.id](!!e.target.checked);\n                } catch (err) {\n                    throw new Error(err);\n                }\n            });\n        } else {\n            // this aids in giving the ability to specify settings through\n            // post and get requests.\n            // /ace_editor.html?setMode=ace/mode/html&setOverwrite=true\n            el = egen.createInput(item, val, clss);\n            el.addEventListener('change', function(e) {\n                try{\n                    if(e.target.value === 'true') {\n                        obj[e.target.id](true);\n                    } else if(e.target.value === 'false') {\n                        obj[e.target.id](false);\n                    } else {\n                        obj[e.target.id](e.target.value);\n                    }\n                } catch (err) {\n                    throw new Error(err);\n                }\n            });\n        }\n        el.style.cssText = 'float:right;';\n        div.appendChild(el);\n        return div;\n    }\n    /**\n     * Generates selection fields for the menu and populates their options\n     *  using information from `editor.menuOptions`\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     * @param {string} item The set function name.\n     * @param {object} esr A reference to the object having the set function.\n     * @param {string} clss The name of the object containing the set function.\n     * @param {string} fn The matching get function's function name.\n     * @returns {DOMElement} Returns a dom element containing a selection\n     *  element populated with options. The option whose value matches that\n     *  returned from `esr[fn]()` will be selected.\n     */\n    function makeDropdown(item, esr, clss, fn) {\n        var val = editor.menuOptions[item];\n        var currentVal = esr[fn]();\n        if (typeof currentVal == 'object')\n            currentVal = currentVal.$id;\n        val.forEach(function(valuex) {\n            if (valuex.value === currentVal)\n                valuex.selected = 'selected';\n        });\n        return createNewEntry(esr, clss, item, val);\n    }\n    /**\n     * Processes the set functions returned from `getSetFunctions`. First it\n     *  checks for menu options defined in `editor.menuOptions`. If no\n     *  options are specified then it checks whether there is a get function\n     *  (replace set with get) for the setting. When either of those\n     *  conditions are met it will attempt to create a new entry for the\n     *  settings menu and push it into the elements array defined above.\n     *  It can only do so for get functions which return\n     *  strings, numbers, and booleans. A special case is written in for\n     *  `getMode` where it looks at the returned objects `$id` property and\n     *  forwards that through instead. Other special cases could be written\n     *  in but that would get a bit ridiculous.\n     * @author <a href=\"mailto:matthewkastor@gmail.com\">\n     *  Matthew Christopher Kastor-Inare III </a><br />\n     *  ☭ Hial Atropa!! ☭\n     * @param {object} setObj An item from the array returned by\n     *  `getSetFunctions`.\n     */\n    function handleSet(setObj) {\n        var item = setObj.functionName;\n        var esr = setObj.parentObj;\n        var clss = setObj.parentName;\n        var val;\n        var fn = item.replace(/^set/, 'get');\n        if(editor.menuOptions[item] !== undefined) {\n            // has options for select element\n            elements.push(makeDropdown(item, esr, clss, fn));\n        } else if(typeof esr[fn] === 'function') {\n            // has get function\n            try {\n                val = esr[fn]();\n                if(typeof val === 'object') {\n                    // setMode takes a string, getMode returns an object\n                    // the $id property of that object is the string\n                    // which may be given to setMode...\n                    val = val.$id;\n                }\n                // the rest of the get functions return strings,\n                // booleans, or numbers.\n                elements.push(\n                    createNewEntry(esr, clss, item, val)\n                );\n            } catch (e) {\n                // if there are errors it is because the element\n                // does not belong in the settings menu\n            }\n        }\n    }\n    addEditorMenuOptions(editor);\n    // gather the set functions\n    getSetFunctions(editor).forEach(function(setObj) {\n        // populate the elements array with good stuff.\n        handleSet(setObj);\n    });\n    // sort the menu entries in the elements list so people can find\n    // the settings in alphabetical order.\n    cleanupElementsList();\n    // dump the entries from the elements list and wrap them up in a div\n    return wrapElements();\n};\n\n});"]}