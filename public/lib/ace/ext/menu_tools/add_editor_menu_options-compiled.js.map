{"version":3,"sources":["add_editor_menu_options.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;;;;;;;;;;;AAWA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA;;;;;;;;;;AASA,WAAO,OAAP,CAAe,oBAAf,GAAsC,SAAS,oBAAT,CAA+B,MAA/B,EAAuC;AACzE,YAAI,WAAW,QAAQ,aAAR,CAAf;AACA,YAAI,YAAY,QAAQ,cAAR,CAAhB;AACA,eAAO,WAAP,GAAqB;AACjB,4BAAgB,CAAC;AACb,6BAAa,MADA;AAEb,uBAAO;AAFM,aAAD,EAGb;AACC,6BAAa,SADd;AAEC,uBAAO;AAFR,aAHa,EAMb;AACC,6BAAa,MADd;AAEC,uBAAO;AAFR,aANa,CADC;AAWjB,sBAAU,EAXO;AAYjB,qBAAS,EAZQ;AAajB,gCAAoB,CAAC;AACjB,6BAAa,KADI;AAEjB,uBAAO;AAFU,aAAD,EAGjB;AACC,6BAAa,KADd;AAEC,uBAAO;AAFR,aAHiB,EAMjB;AACC,6BAAa,OADd;AAEC,uBAAO;AAFR,aANiB,EASjB;AACC,6BAAa,UADd;AAEC,uBAAO;AAFR,aATiB,EAYjB;AACC,6BAAa,SADd;AAEC,uBAAO;AAFR,aAZiB;AAbH,SAArB;;AA+BA,eAAO,WAAP,CAAmB,QAAnB,GAA8B,UAAU,MAAV,CAAiB,GAAjB,CAAqB,UAAS,KAAT,EAAgB;AAC/D,mBAAO;AACH,6BAAa,MAAM,OADhB;AAEH,uBAAO,MAAM;AAFV,aAAP;AAIH,SAL6B,CAA9B;;AAOA,eAAO,WAAP,CAAmB,OAAnB,GAA6B,SAAS,KAAT,CAAe,GAAf,CAAmB,UAAS,IAAT,EAAe;AAC3D,mBAAO;AACH,6BAAa,KAAK,IADf;AAEH,uBAAO,KAAK;AAFT,aAAP;AAIH,SAL4B,CAA7B;AAMH,KA/CD;AAkDC,CA9DD","file":"add_editor_menu_options-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2013 Matthew Christopher Kastor-Inare III, Atropa Inc. Intl\n * All rights reserved.\n *\n * Contributed to Ajax.org under the BSD license.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Add Editor Menu Options\n * @fileOverview Add Editor Menu Options <br />\n * The menu options property needs to be added to the editor\n *  so that the settings menu can know about options for\n *  selection elements and track which option is selected.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\ndefine(function(require, exports, module) {\n'use strict';\n\n/**\n * The menu options property needs to be added to the editor\n *  so that the settings menu can know about options for\n *  selection elements and track which option is selected.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param {ace.Editor} editor An instance of the ace editor.\n */\nmodule.exports.addEditorMenuOptions = function addEditorMenuOptions (editor) {\n    var modelist = require('../modelist');\n    var themelist = require('../themelist');\n    editor.menuOptions = {\n        setNewLineMode: [{\n            textContent: \"unix\",\n            value: \"unix\"\n        }, {\n            textContent: \"windows\",\n            value: \"windows\"\n        }, {\n            textContent: \"auto\",\n            value: \"auto\"\n        }],\n        setTheme: [],\n        setMode: [],\n        setKeyboardHandler: [{\n            textContent: \"ace\",\n            value: \"\"\n        }, {\n            textContent: \"vim\",\n            value: \"ace/keyboard/vim\"\n        }, {\n            textContent: \"emacs\",\n            value: \"ace/keyboard/emacs\"\n        }, {\n            textContent: \"textarea\",\n            value: \"ace/keyboard/textarea\"\n        }, {\n            textContent: \"sublime\",\n            value: \"ace/keyboard/sublime\"\n        }]\n    };\n\n    editor.menuOptions.setTheme = themelist.themes.map(function(theme) {\n        return {\n            textContent: theme.caption,\n            value: theme.theme\n        };\n    });\n\n    editor.menuOptions.setMode = modelist.modes.map(function(mode) {\n        return {\n            textContent: mode.name,\n            value: mode.mode\n        };\n    });\n};\n\n\n});\n"]}