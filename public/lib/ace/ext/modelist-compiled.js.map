{"version":3,"sources":["modelist.js"],"names":[],"mappings":"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","file":"modelist-compiled.js","sourcesContent":["define(function(require, exports, module) {\n\"use strict\";\n\nvar modes = [];\n/**\n * Suggests a mode based on the file extension present in the given path\n * @param {string} path The path to the file\n * @returns {object} Returns an object containing information about the\n *  suggested mode.\n */\nfunction getModeForPath(path) {\n    var mode = modesByName.text;\n    var fileName = path.split(/[\\/\\\\]/).pop();\n    for (var i = 0; i < modes.length; i++) {\n        if (modes[i].supportsFile(fileName)) {\n            mode = modes[i];\n            break;\n        }\n    }\n    return mode;\n}\n\nvar Mode = function(name, caption, extensions) {\n    this.name = name;\n    this.caption = caption;\n    this.mode = \"ace/mode/\" + name;\n    this.extensions = extensions;\n    var re;\n    if (/\\^/.test(extensions)) {\n        re = extensions.replace(/\\|(\\^)?/g, function(a, b){\n            return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\n        }) + \"$\";\n    } else {\n        re = \"^.*\\\\.(\" + extensions + \")$\";\n    }\n\n    this.extRe = new RegExp(re, \"gi\");\n};\n\nMode.prototype.supportsFile = function(filename) {\n    return filename.match(this.extRe);\n};\n\n// todo firstlinematch\nvar supportedModes = {\n    ABAP:        [\"abap\"],\n    ABC:         [\"abc\"],\n    ActionScript:[\"as\"],\n    ADA:         [\"ada|adb\"],\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\n    AsciiDoc:    [\"asciidoc|adoc\"],\n    Assembly_x86:[\"asm|a\"],\n    AutoHotKey:  [\"ahk\"],\n    BatchFile:   [\"bat|cmd\"],\n    Bro:         [\"bro\"],\n    C_Cpp:       [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\n    C9Search:    [\"c9search_results\"],\n    Cirru:       [\"cirru|cr\"],\n    Clojure:     [\"clj|cljs\"],\n    Cobol:       [\"CBL|COB\"],\n    coffee:      [\"coffee|cf|cson|^Cakefile\"],\n    ColdFusion:  [\"cfm\"],\n    CSharp:      [\"cs\"],\n    CSS:         [\"css\"],\n    Curly:       [\"curly\"],\n    D:           [\"d|di\"],\n    Dart:        [\"dart\"],\n    Diff:        [\"diff|patch\"],\n    Dockerfile:  [\"^Dockerfile\"],\n    Dot:         [\"dot\"],\n    Drools:      [\"drl\"],\n    Dummy:       [\"dummy\"],\n    DummySyntax: [\"dummy\"],\n    Eiffel:      [\"e|ge\"],\n    EJS:         [\"ejs\"],\n    Elixir:      [\"ex|exs\"],\n    Elm:         [\"elm\"],\n    Erlang:      [\"erl|hrl\"],\n    Forth:       [\"frt|fs|ldr|fth|4th\"],\n    Fortran:     [\"f|f90\"],\n    FTL:         [\"ftl\"],\n    Gcode:       [\"gcode\"],\n    Gherkin:     [\"feature\"],\n    Gitignore:   [\"^.gitignore\"],\n    Glsl:        [\"glsl|frag|vert\"],\n    Gobstones:   [\"gbs\"],\n    golang:      [\"go\"],\n    Groovy:      [\"groovy\"],\n    HAML:        [\"haml\"],\n    Handlebars:  [\"hbs|handlebars|tpl|mustache\"],\n    Haskell:     [\"hs\"],\n    Haskell_Cabal:     [\"cabal\"],\n    haXe:        [\"hx\"],\n    Hjson:       [\"hjson\"],\n    HTML:        [\"html|htm|xhtml\"],\n    HTML_Elixir: [\"eex|html.eex\"],\n    HTML_Ruby:   [\"erb|rhtml|html.erb\"],\n    INI:         [\"ini|conf|cfg|prefs\"],\n    Io:          [\"io\"],\n    Jack:        [\"jack\"],\n    Jade:        [\"jade|pug\"],\n    Java:        [\"java\"],\n    JavaScript:  [\"js|jsm|jsx\"],\n    JSON:        [\"json\"],\n    JSONiq:      [\"jq\"],\n    JSP:         [\"jsp\"],\n    JSX:         [\"jsx\"],\n    Julia:       [\"jl\"],\n    Kotlin:      [\"kt|kts\"],\n    LaTeX:       [\"tex|latex|ltx|bib\"],\n    LESS:        [\"less\"],\n    Liquid:      [\"liquid\"],\n    Lisp:        [\"lisp\"],\n    LiveScript:  [\"ls\"],\n    LogiQL:      [\"logic|lql\"],\n    LSL:         [\"lsl\"],\n    Lua:         [\"lua\"],\n    LuaPage:     [\"lp\"],\n    Lucene:      [\"lucene\"],\n    Makefile:    [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\n    Markdown:    [\"md|markdown\"],\n    Mask:        [\"mask\"],\n    MATLAB:      [\"matlab\"],\n    Maze:        [\"mz\"],\n    MEL:         [\"mel\"],\n    MUSHCode:    [\"mc|mush\"],\n    MySQL:       [\"mysql\"],\n    Nix:         [\"nix\"],\n    NSIS:        [\"nsi|nsh\"],\n    ObjectiveC:  [\"m|mm\"],\n    OCaml:       [\"ml|mli\"],\n    Pascal:      [\"pas|p\"],\n    Perl:        [\"pl|pm\"],\n    pgSQL:       [\"pgsql\"],\n    PHP:         [\"php|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\n    Pig:         [\"pig\"],\n    Powershell:  [\"ps1\"],\n    Praat:       [\"praat|praatscript|psc|proc\"],\n    Prolog:      [\"plg|prolog\"],\n    Properties:  [\"properties\"],\n    Protobuf:    [\"proto\"],\n    Python:      [\"py\"],\n    R:           [\"r\"],\n    Razor:       [\"cshtml|asp\"],\n    RDoc:        [\"Rd\"],\n    RHTML:       [\"Rhtml\"],\n    RST:         [\"rst\"],\n    Ruby:        [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\n    Rust:        [\"rs\"],\n    SASS:        [\"sass\"],\n    SCAD:        [\"scad\"],\n    Scala:       [\"scala\"],\n    Scheme:      [\"scm|sm|rkt|oak|scheme\"],\n    SCSS:        [\"scss\"],\n    SH:          [\"sh|bash|^.bashrc\"],\n    SJS:         [\"sjs\"],\n    Smarty:      [\"smarty|tpl\"],\n    snippets:    [\"snippets\"],\n    Soy_Template:[\"soy\"],\n    Space:       [\"space\"],\n    SQL:         [\"sql\"],\n    SQLServer:   [\"sqlserver\"],\n    Stylus:      [\"styl|stylus\"],\n    SVG:         [\"svg\"],\n    Swift:       [\"swift\"],\n    Tcl:         [\"tcl\"],\n    Tex:         [\"tex\"],\n    Text:        [\"txt\"],\n    Textile:     [\"textile\"],\n    Toml:        [\"toml\"],\n    TSX:         [\"tsx\"],\n    Twig:        [\"twig|swig\"],\n    Typescript:  [\"ts|typescript|str\"],\n    Vala:        [\"vala\"],\n    VBScript:    [\"vbs|vb\"],\n    Velocity:    [\"vm\"],\n    Verilog:     [\"v|vh|sv|svh\"],\n    VHDL:        [\"vhd|vhdl\"],\n    Wollok:      [\"wlk|wpgm|wtest\"],\n    XML:         [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\n    XQuery:      [\"xq\"],\n    YAML:        [\"yaml|yml\"],\n    // Add the missing mode \"Django\" to ext-modelist\n    Django:      [\"html\"]\n};\n\nvar nameOverrides = {\n    ObjectiveC: \"Objective-C\",\n    CSharp: \"C#\",\n    golang: \"Go\",\n    C_Cpp: \"C and C++\",\n    coffee: \"CoffeeScript\",\n    HTML_Ruby: \"HTML (Ruby)\",\n    HTML_Elixir: \"HTML (Elixir)\",\n    FTL: \"FreeMarker\"\n};\nvar modesByName = {};\nfor (var name in supportedModes) {\n    var data = supportedModes[name];\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\n    var filename = name.toLowerCase();\n    var mode = new Mode(filename, displayName, data[0]);\n    modesByName[filename] = mode;\n    modes.push(mode);\n}\n\nmodule.exports = {\n    getModeForPath: getModeForPath,\n    modes: modes,\n    modesByName: modesByName\n};\n\n});\n\n"]}