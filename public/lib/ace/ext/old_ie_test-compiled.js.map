{"version":3,"sources":["old_ie_test.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAI,OAAO,OAAP,KAAmB,WAAvB,EAAoC;AAChC,YAAQ,YAAR;AACH;;AAED,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,SAAS,QAAQ,oBAAR,CAAb;;AAEA,WAAO,OAAP,GAAiB;AACb,6CAAsC,qCAAW;AAC7C,gBAAI,OAAO,OAAO,SAAP,CAAiB,IAA5B;AACA,gBAAI,aAAa,SAAb,UAAa,CAAS,GAAT,EAAc;AAC3B,oBAAI,SAAS,KAAK,IAAL,CAAU,IAAV,EAAgB,GAAhB,CAAb;AACA,oBAAI,MAAJ,EAAY;AACR,yBAAK,IAAI,IAAI,OAAO,MAApB,EAA4B,GAA5B;AACI,4BAAI,CAAC,OAAO,CAAP,CAAL,EACI,OAAO,CAAP,IAAY,EAAZ;AAFR;AAGH;AACD,uBAAO,MAAP;AACH,aARD;;AAUA,gBAAI;AACA;AACA,uBAAO,SAAP,CAAiB,IAAjB,GAAwB,UAAxB;AACA,wBAAQ,UAAR;AACA,oBAAI,YAAY,QAAQ,cAAR,EAAwB,SAAxC;AACA,oBAAI,2BAA2B,QAAQ,oCAAR,EAA8C,wBAA7E;AACA,oBAAI,YAAY,IAAI,SAAJ,CAAe,IAAI,wBAAJ,EAAD,CAA+B,QAA/B,EAAd,CAAhB;;AAEA,oBAAI,SAAS,UAAU,aAAV,CAAwB,QAAxB,EAAkC,OAAlC,EAA2C,MAAxD;AACA,uBAAO,KAAP,CAAa,QAAb,EAAuB,OAAO,CAAP,EAAU,IAAjC;AACH,aAVD,SAUU;AACN;AACA,uBAAO,SAAP,CAAiB,IAAjB,GAAwB,IAAxB;AACA,oBAAI,SAAS,QAAQ,cAAR,CAAb;AACA,uBAAO,SAAP,GAAmB,OAAO,cAA1B;AACA,uBAAO,SAAP,CAAiB,SAAjB,CAA2B,aAA3B,GAA2C,OAAO,SAAP,CAAiB,SAAjB,CAA2B,kBAAtE;AACH;AACJ;AA9BY,KAAjB;AAiCC,CAtCD;;AAwCA,IAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,QAAQ,IAAxD,EAA8D;AAC1D,YAAQ,SAAR,EAAmB,IAAnB,CAAwB,QAAxB,CAAiC,OAAO,OAAxC,EAAiD,IAAjD;AACH","file":"old_ie_test-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\nif (typeof process !== \"undefined\") {\n    require(\"amd-loader\");\n}\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar assert = require(\"../test/assertions\");\n\nmodule.exports = {\n    \"test: getTokenizer() (smoke test)\" : function() {\n        var exec = RegExp.prototype.exec\n        var brokenExec = function(str) {\n            var result = exec.call(this, str);\n            if (result) {\n                for (var i = result.length; i--;)\n                    if (!result[i])\n                        result[i] = \"\";\n            }\n            return result;\n        }\n        \n        try {\n            // break this to emulate old ie\n            RegExp.prototype.exec = brokenExec;\n            require(\"./old_ie\");\n            var Tokenizer = require(\"../tokenizer\").Tokenizer;\n            var JavaScriptHighlightRules = require(\"../mode/javascript_highlight_rules\").JavaScriptHighlightRules;\n            var tokenizer = new Tokenizer((new JavaScriptHighlightRules).getRules());\n            \n            var tokens = tokenizer.getLineTokens(\"'juhu'\", \"start\").tokens;\n            assert.equal(\"string\", tokens[0].type);\n        } finally {\n            // restore modified functions\n            RegExp.prototype.exec = exec;\n            var module = require(\"../tokenizer\");\n            module.Tokenizer = module.Tokenizer_orig;\n            module.Tokenizer.prototype.getLineTokens = module.Tokenizer.prototype.getLineTokens_orig;\n        }\n    }\n};\n\n});\n\nif (typeof module !== \"undefined\" && module === require.main) {\n    require(\"asyncjs\").test.testcase(module.exports).exec()\n}\n"]}