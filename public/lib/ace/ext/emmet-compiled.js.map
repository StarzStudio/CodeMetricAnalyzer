{"version":3,"sources":["emmet.js"],"names":[],"mappings":"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","file":"emmet-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\nvar HashHandler = require(\"ace/keyboard/hash_handler\").HashHandler;\nvar Editor = require(\"ace/editor\").Editor;\nvar snippetManager = require(\"ace/snippets\").snippetManager;\nvar Range = require(\"ace/range\").Range;\nvar emmet, emmetPath;\n\n/**\n * Implementation of {@link IEmmetEditor} interface for Ace\n */\nfunction AceEmmetEditor() {}\n\nAceEmmetEditor.prototype = {\n    setupContext: function(editor) {\n        this.ace = editor;\n        this.indentation = editor.session.getTabString();\n        if (!emmet)\n            emmet = window.emmet;\n        var resources = emmet.resources || emmet.require(\"resources\");\n        resources.setVariable(\"indentation\", this.indentation);\n        this.$syntax = null;\n        this.$syntax = this.getSyntax();\n    },\n    /**\n     * Returns character indexes of selected text: object with <code>start</code>\n     * and <code>end</code> properties. If there's no selection, should return\n     * object with <code>start</code> and <code>end</code> properties referring\n     * to current caret position\n     * @return {Object}\n     * @example\n     * var selection = editor.getSelectionRange();\n     * alert(selection.start + ', ' + selection.end);\n     */\n    getSelectionRange: function() {\n        // TODO should start be caret position instead?\n        var range = this.ace.getSelectionRange();\n        var doc = this.ace.session.doc;\n        return {\n            start: doc.positionToIndex(range.start),\n            end: doc.positionToIndex(range.end)\n        };\n    },\n\n    /**\n     * Creates selection from <code>start</code> to <code>end</code> character\n     * indexes. If <code>end</code> is ommited, this method should place caret\n     * and <code>start</code> index\n     * @param {Number} start\n     * @param {Number} [end]\n     * @example\n     * editor.createSelection(10, 40);\n     *\n     * //move caret to 15th character\n     * editor.createSelection(15);\n     */\n    createSelection: function(start, end) {\n        var doc = this.ace.session.doc;\n        this.ace.selection.setRange({\n            start: doc.indexToPosition(start),\n            end: doc.indexToPosition(end)\n        });\n    },\n\n    /**\n     * Returns current line's start and end indexes as object with <code>start</code>\n     * and <code>end</code> properties\n     * @return {Object}\n     * @example\n     * var range = editor.getCurrentLineRange();\n     * alert(range.start + ', ' + range.end);\n     */\n    getCurrentLineRange: function() {\n        var ace = this.ace;\n        var row = ace.getCursorPosition().row;\n        var lineLength = ace.session.getLine(row).length;\n        var index = ace.session.doc.positionToIndex({row: row, column: 0});\n        return {\n            start: index,\n            end: index + lineLength\n        };\n    },\n\n    /**\n     * Returns current caret position\n     * @return {Number|null}\n     */\n    getCaretPos: function(){\n        var pos = this.ace.getCursorPosition();\n        return this.ace.session.doc.positionToIndex(pos);\n    },\n\n    /**\n     * Set new caret position\n     * @param {Number} index Caret position\n     */\n    setCaretPos: function(index){\n        var pos = this.ace.session.doc.indexToPosition(index);\n        this.ace.selection.moveToPosition(pos);\n    },\n\n    /**\n     * Returns content of current line\n     * @return {String}\n     */\n    getCurrentLine: function() {\n        var row = this.ace.getCursorPosition().row;\n        return this.ace.session.getLine(row);\n    },\n\n    /**\n     * Replace editor's content or it's part (from <code>start</code> to\n     * <code>end</code> index). If <code>value</code> contains\n     * <code>caret_placeholder</code>, the editor will put caret into\n     * this position. If you skip <code>start</code> and <code>end</code>\n     * arguments, the whole target's content will be replaced with\n     * <code>value</code>.\n     *\n     * If you pass <code>start</code> argument only,\n     * the <code>value</code> will be placed at <code>start</code> string\n     * index of current content.\n     *\n     * If you pass <code>start</code> and <code>end</code> arguments,\n     * the corresponding substring of current target's content will be\n     * replaced with <code>value</code>.\n     * @param {String} value Content you want to paste\n     * @param {Number} [start] Start index of editor's content\n     * @param {Number} [end] End index of editor's content\n     * @param {Boolean} [noIndent] Do not auto indent <code>value</code>\n     */\n    replaceContent: function(value, start, end, noIndent) {\n        if (end == null)\n            end = start == null ? this.getContent().length : start;\n        if (start == null)\n            start = 0;        \n        \n        var editor = this.ace;\n        var doc = editor.session.doc;\n        var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n        editor.session.remove(range);\n        \n        range.end = range.start;\n        //editor.selection.setRange(range);\n        \n        value = this.$updateTabstops(value);\n        snippetManager.insertSnippet(editor, value);\n    },\n\n    /**\n     * Returns editor's content\n     * @return {String}\n     */\n    getContent: function(){\n        return this.ace.getValue();\n    },\n\n    /**\n     * Returns current editor's syntax mode\n     * @return {String}\n     */\n    getSyntax: function() {\n        if (this.$syntax)\n            return this.$syntax;\n        var syntax = this.ace.session.$modeId.split(\"/\").pop();\n        if (syntax == \"html\" || syntax == \"php\") {\n            var cursor = this.ace.getCursorPosition();\n            var state = this.ace.session.getState(cursor.row);\n            if (typeof state != \"string\")\n                state = state[0];\n            if (state) {\n                state = state.split(\"-\");\n                if (state.length > 1)\n                    syntax = state[0];\n                else if (syntax == \"php\")\n                    syntax = \"html\";\n            }\n        }\n        return syntax;\n    },\n\n    /**\n     * Returns current output profile name (@see emmet#setupProfile)\n     * @return {String}\n     */\n    getProfileName: function() {\n        var resources = emmet.resources || emmet.require(\"resources\");\n        switch (this.getSyntax()) {\n          case \"css\": return \"css\";\n          case \"xml\":\n          case \"xsl\":\n            return \"xml\";\n          case \"html\":\n            var profile = resources.getVariable(\"profile\");\n            // no forced profile, guess from content html or xhtml?\n            if (!profile)\n                profile = this.ace.session.getLines(0,2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\": \"html\";\n            return profile;\n          default:\n            var mode = this.ace.session.$mode;\n            return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n        }\n    },\n\n    /**\n     * Ask user to enter something\n     * @param {String} title Dialog title\n     * @return {String} Entered data\n     * @since 0.65\n     */\n    prompt: function(title) {\n        return prompt(title);\n    },\n\n    /**\n     * Returns current selection\n     * @return {String}\n     * @since 0.65\n     */\n    getSelection: function() {\n        return this.ace.session.getTextRange();\n    },\n\n    /**\n     * Returns current editor's file path\n     * @return {String}\n     * @since 0.65\n     */\n    getFilePath: function() {\n        return \"\";\n    },\n    \n    // update tabstops: make sure all caret placeholders are unique\n    // by default, abbreviation parser generates all unlinked (un-mirrored)\n    // tabstops as ${0}, so we have upgrade all caret tabstops with unique\n    // positions but make sure that all other tabstops are not linked accidentally\n    // based on https://github.com/sergeche/emmet-sublime/blob/master/editor.js#L119-L171\n    $updateTabstops: function(value) {\n        var base = 1000;\n        var zeroBase = 0;\n        var lastZero = null;\n        var ts = emmet.tabStops || emmet.require('tabStops');\n        var resources = emmet.resources || emmet.require(\"resources\");\n        var settings = resources.getVocabulary(\"user\");\n        var tabstopOptions = {\n            tabstop: function(data) {\n                var group = parseInt(data.group, 10);\n                var isZero = group === 0;\n                if (isZero)\n                    group = ++zeroBase;\n                else\n                    group += base;\n\n                var placeholder = data.placeholder;\n                if (placeholder) {\n                    // recursively update nested tabstops\n                    placeholder = ts.processText(placeholder, tabstopOptions);\n                }\n\n                var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n\n                if (isZero) {\n                    lastZero = [data.start, result];\n                }\n\n                return result;\n            },\n            escape: function(ch) {\n                if (ch == '$') return '\\\\$';\n                if (ch == '\\\\') return '\\\\\\\\';\n                return ch;\n            }\n        };\n\n        value = ts.processText(value, tabstopOptions);\n\n        if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n            value += '${0}';\n        } else if (lastZero) {\n            var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n            value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n        }\n        \n        return value;\n    }\n};\n\n\nvar keymap = {\n    expand_abbreviation: {\"mac\": \"ctrl+alt+e\", \"win\": \"alt+e\"},\n    match_pair_outward: {\"mac\": \"ctrl+d\", \"win\": \"ctrl+,\"},\n    match_pair_inward: {\"mac\": \"ctrl+j\", \"win\": \"ctrl+shift+0\"},\n    matching_pair: {\"mac\": \"ctrl+alt+j\", \"win\": \"alt+j\"},\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: {\"mac\": \"command+/\", \"win\": \"ctrl+/\"},\n    split_join_tag: {\"mac\": \"shift+command+'\", \"win\": \"shift+ctrl+`\"},\n    remove_tag: {\"mac\": \"command+'\", \"win\": \"shift+ctrl+;\"},\n    evaluate_math_expression: {\"mac\": \"shift+command+y\", \"win\": \"shift+ctrl+y\"},\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: {\"mac\": \"alt+command+up\", \"win\": \"shift+alt+up\"},\n    decrement_number_by_10: {\"mac\": \"alt+command+down\", \"win\": \"shift+alt+down\"},\n    select_next_item: {\"mac\": \"shift+command+.\", \"win\": \"shift+ctrl+.\"},\n    select_previous_item: {\"mac\": \"shift+command+,\", \"win\": \"shift+ctrl+,\"},\n    reflect_css_value: {\"mac\": \"shift+command+r\", \"win\": \"shift+ctrl+r\"},\n\n    encode_decode_data_url: {\"mac\": \"shift+ctrl+d\", \"win\": \"ctrl+'\"},\n    // update_image_size: {\"mac\": \"shift+ctrl+i\", \"win\": \"ctrl+u\"},\n    // expand_as_you_type: \"ctrl+alt+enter\",\n    // wrap_as_you_type: {\"mac\": \"shift+ctrl+g\", \"win\": \"shift+ctrl+g\"},\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: {\"mac\": \"shift+ctrl+a\", \"win\": \"shift+ctrl+a\"}\n};\n\nvar editorProxy = new AceEmmetEditor();\nexports.commands = new HashHandler();\nexports.runEmmetCommand = function runEmmetCommand(editor) {\n    try {\n        editorProxy.setupContext(editor);\n        var actions = emmet.actions || emmet.require(\"actions\");\n    \n        if (this.action == \"expand_abbreviation_with_tab\") {\n            if (!editor.selection.isEmpty())\n                return false;\n            var pos = editor.selection.lead;\n            var token = editor.session.getTokenAt(pos.row, pos.column);\n            if (token && /\\btag\\b/.test(token.type))\n                return false;\n        }\n        \n        if (this.action == \"wrap_with_abbreviation\") {\n            // without setTimeout prompt doesn't work on firefox\n            return setTimeout(function() {\n                actions.run(\"wrap_with_abbreviation\", editorProxy);\n            }, 0);\n        }\n        \n        var result = actions.run(this.action, editorProxy);\n    } catch(e) {\n        if (!emmet) {\n            load(runEmmetCommand.bind(this, editor));\n            return true;\n        }\n        editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n        console.log(e);\n        result = false;\n    }\n    return result;\n};\n\nfor (var command in keymap) {\n    exports.commands.addCommand({\n        name: \"emmet:\" + command,\n        action: command,\n        bindKey: keymap[command],\n        exec: exports.runEmmetCommand,\n        multiSelectAction: \"forEach\"\n    });\n}\n\nexports.updateCommands = function(editor, enabled) {\n    if (enabled) {\n        editor.keyBinding.addKeyboardHandler(exports.commands);\n    } else {\n        editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n};\n\nexports.isSupportedMode = function(mode) {\n    if (!mode) return false;\n    if (mode.emmetConfig) return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n};\n\nexports.isAvailable = function(editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command))\n        return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n    if (isSupported && mode.$modes) {\n        // TODO refactor mode delegates to make this simpler\n        try {\n            editorProxy.setupContext(editor);\n            if (/js|php/.test(editorProxy.getSyntax()))\n                isSupported = false;\n        } catch(e) {}\n    }\n    return isSupported;\n}\n\nvar onChangeMode = function(e, target) {\n    var editor = target;\n    if (!editor)\n        return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false)\n        enabled = false;\n    if (enabled)\n        load();\n    exports.updateCommands(editor, enabled);\n};\n\nvar load = function(cb) {\n    if (typeof emmetPath == \"string\") {\n        require(\"ace/config\").loadModule(emmetPath, function() {\n            emmetPath = null;\n            cb && cb();\n        });\n    }\n};\n\nexports.AceEmmetEditor = AceEmmetEditor;\nrequire(\"ace/config\").defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n        set: function(val) {\n            this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n            onChangeMode({enableEmmet: !!val}, this);\n        },\n        value: true\n    }\n});\n\nexports.setCore = function(e) {\n    if (typeof e == \"string\")\n       emmetPath = e;\n    else\n       emmet = e;\n};\n});\n\n"]}