{"version":3,"sources":["lsl.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,QAAQ,QAAQ,uBAAR,EAAiC,iBAA7C;AACA,QAAI,UAAU,QAAQ,0BAAR,EAAoC,oBAAlD;AACA,QAAI,QAAQ,QAAQ,UAAR,EAAoB,KAAhC;AACA,QAAI,WAAW,QAAQ,QAAR,EAAkB,IAAjC;AACA,QAAI,kBAAkB,QAAQ,oBAAR,EAA8B,eAApD;AACA,QAAI,iBAAiB,QAAQ,kBAAR,EAA4B,QAAjD;AACA,QAAI,MAAM,QAAQ,YAAR,CAAV;;AAEA,QAAI,OAAO,SAAP,IAAO,GAAW;AAClB,aAAK,cAAL,GAAsB,KAAtB;AACA,aAAK,QAAL,GAAgB,IAAI,OAAJ,EAAhB;AACA,aAAK,UAAL,GAAkB,IAAI,eAAJ,EAAlB;AACA,aAAK,YAAL,GAAoB,IAAI,cAAJ,EAApB;AACH,KALD;AAMA,QAAI,QAAJ,CAAa,IAAb,EAAmB,QAAnB;;AAEA,KAAC,YAAW;;AAER,aAAK,gBAAL,GAAwB,CAAC,IAAD,CAAxB;;AAEA,aAAK,YAAL,GAAoB;AAChB,mBAAO,IADS;AAEhB,iBAAK;AAFW,SAApB;;AAKA,aAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B;AAChD,gBAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,CAAb;;AAEA,gBAAI,gBAAgB,KAAK,YAAL,GAAoB,aAApB,CAAkC,IAAlC,EAAwC,KAAxC,CAApB;AACA,gBAAI,SAAS,cAAc,MAA3B;AACA,gBAAI,WAAW,cAAc,KAA7B;;AAEA,gBAAI,OAAO,MAAP,IAAiB,OAAO,OAAO,MAAP,GAAc,CAArB,EAAwB,IAAxB,KAAiC,mBAAtD,EAA2E;AACvE,uBAAO,MAAP;AACH;;AAED,gBAAI,UAAU,OAAd,EAAuB;AACnB,oBAAI,QAAQ,KAAK,KAAL,CAAW,iBAAX,CAAZ;AACA,oBAAI,KAAJ,EAAW;AACP,8BAAU,GAAV;AACH;AACJ;;AAED,mBAAO,MAAP;AACH,SAnBD;;AAqBA,aAAK,YAAL,GAAoB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AAC7C,mBAAO,KAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,KAAjC,CAAP;AACH,SAFD;;AAIA,aAAK,WAAL,GAAmB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACzC,iBAAK,QAAL,CAAc,WAAd,CAA0B,GAA1B,EAA+B,GAA/B;AACH,SAFD;;AAIA,aAAK,GAAL,GAAW,cAAX;AACH,KAvCD,EAuCG,IAvCH,CAuCQ,KAAK,SAvCb;;AAyCA,YAAQ,IAAR,GAAe,IAAf;AACC,CA7DD","file":"lsl-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2013, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar Rules = require(\"./lsl_highlight_rules\").LSLHighlightRules;\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\nvar TextMode = require(\"./text\").Mode;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar oop = require(\"../lib/oop\");\n\nvar Mode = function() {\n    this.HighlightRules = Rules;\n    this.$outdent = new Outdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"//\"];\n\n    this.blockComment = {\n        start: \"/*\",\n        end: \"*/\"\n    };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type === \"comment.block.lsl\") {\n            return indent;\n        }\n\n        if (state === \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/lsl\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"]}