{"version":3,"sources":["coffee.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,QAAQ,QAAQ,0BAAR,EAAoC,oBAAhD;AACA,QAAI,UAAU,QAAQ,0BAAR,EAAoC,oBAAlD;AACA,QAAI,WAAW,QAAQ,kBAAR,EAA4B,QAA3C;AACA,QAAI,QAAQ,QAAQ,UAAR,EAAoB,KAAhC;AACA,QAAI,WAAW,QAAQ,QAAR,EAAkB,IAAjC;AACA,QAAI,eAAe,QAAQ,yBAAR,EAAmC,YAAtD;AACA,QAAI,MAAM,QAAQ,YAAR,CAAV;;AAEA,aAAS,IAAT,GAAgB;AACZ,aAAK,cAAL,GAAsB,KAAtB;AACA,aAAK,QAAL,GAAgB,IAAI,OAAJ,EAAhB;AACA,aAAK,YAAL,GAAoB,IAAI,QAAJ,EAApB;AACH;;AAED,QAAI,QAAJ,CAAa,IAAb,EAAmB,QAAnB;;AAEA,KAAC,YAAW;;AAER;;;;;;;;;;;;;;;;;;;;;AAqBA,YAAI,WAAW,gKAAf;;AAEA,aAAK,gBAAL,GAAwB,GAAxB;AACA,aAAK,YAAL,GAAoB,EAAC,OAAO,KAAR,EAAe,KAAK,KAApB,EAApB;;AAEA,aAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B;AAChD,gBAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,CAAb;AACA,gBAAI,SAAS,KAAK,YAAL,GAAoB,aAApB,CAAkC,IAAlC,EAAwC,KAAxC,EAA+C,MAA5D;;AAEA,gBAAI,EAAE,OAAO,MAAP,IAAiB,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B,IAA1B,KAAmC,SAAtD,KACA,UAAU,OADV,IACqB,SAAS,IAAT,CAAc,IAAd,CADzB,EAEI,UAAU,GAAV;AACJ,mBAAO,MAAP;AACH,SARD;;AAUA,aAAK,YAAL,GAAoB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AAC7C,mBAAO,KAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,KAAjC,CAAP;AACH,SAFD;;AAIA,aAAK,WAAL,GAAmB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACzC,iBAAK,QAAL,CAAc,WAAd,CAA0B,GAA1B,EAA+B,GAA/B;AACH,SAFD;;AAIA,aAAK,YAAL,GAAoB,UAAS,OAAT,EAAkB;AAClC,gBAAI,SAAS,IAAI,YAAJ,CAAiB,CAAC,KAAD,CAAjB,EAA0B,wBAA1B,EAAoD,QAApD,CAAb;AACA,mBAAO,gBAAP,CAAwB,QAAQ,WAAR,EAAxB;;AAEA,mBAAO,EAAP,CAAU,UAAV,EAAsB,UAAS,CAAT,EAAY;AAC9B,wBAAQ,cAAR,CAAuB,EAAE,IAAzB;AACH,aAFD;;AAIA,mBAAO,EAAP,CAAU,WAAV,EAAuB,YAAW;AAC9B,wBAAQ,gBAAR;AACH,aAFD;;AAIA,mBAAO,MAAP;AACH,SAbD;;AAeA,aAAK,GAAL,GAAW,iBAAX;AACH,KA9DD,EA8DG,IA9DH,CA8DQ,KAAK,SA9Db;;AAgEA,YAAQ,IAAR,GAAe,IAAf;AAEC,CArFD","file":"coffee-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar Rules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar TextMode = require(\"./text\").Mode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar oop = require(\"../lib/oop\");\n\nfunction Mode() {\n    this.HighlightRules = Rules;\n    this.$outdent = new Outdent();\n    this.foldingRules = new FoldMode();\n}\n\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    /*:\n      [({[=:]        # Opening parentheses or brackets\n     |[-=]>          # OR single or double arrow\n     |\\b(?:          # OR one of these words:\n       else          #    else\n      |try           # OR try\n      |(?:swi|ca)tch # OR catch, optionally followed by:\n        (?:\\s*[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?  # a variable\n      |finally       # OR finally\n     ))\\s*$          # all as the last thing on a line (allowing trailing space)\n    |                # ---- OR ---- :\n    ^\\s*             # a line starting with optional space\n    (else\\b\\s*)?     # followed by an optional \"else\"\n    (?:              # followed by one of the following:\n       if            #    if\n      |for           # OR for\n      |while         # OR while\n      |loop          # OR loop\n    )\\b              #    (as a word)\n    (?!.*\\bthen\\b)   # ... but NOT followed by \"then\" on the line\n    */\n    var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|(?:swi|ca)tch(?:\\s+[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?|finally))\\s*$|^\\s*(else\\b\\s*)?(?:if|for|while|loop)\\b(?!.*\\bthen\\b)/;\n    \n    this.lineCommentStart = \"#\";\n    this.blockComment = {start: \"###\", end: \"###\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n    \n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\n            state === 'start' && indenter.test(line))\n            indent += tab;\n        return indent;\n    };\n    \n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/coffee_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        \n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n        \n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n        \n        return worker;\n    };\n\n    this.$id = \"ace/mode/coffee\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"]}