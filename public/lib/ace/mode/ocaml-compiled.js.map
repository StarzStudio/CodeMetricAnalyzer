{"version":3,"sources":["ocaml.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,MAAM,QAAQ,YAAR,CAAV;AACA,QAAI,WAAW,QAAQ,QAAR,EAAkB,IAAjC;AACA,QAAI,sBAAsB,QAAQ,yBAAR,EAAmC,mBAA7D;AACA,QAAI,uBAAuB,QAAQ,0BAAR,EAAoC,oBAA/D;AACA,QAAI,QAAQ,QAAQ,UAAR,EAAoB,KAAhC;;AAEA,QAAI,OAAO,SAAP,IAAO,GAAW;AAClB,aAAK,cAAL,GAAsB,mBAAtB;AACA,aAAK,UAAL,GAAkB,KAAK,iBAAvB;;AAEA,aAAK,QAAL,GAAkB,IAAI,oBAAJ,EAAlB;AACH,KALD;AAMA,QAAI,QAAJ,CAAa,IAAb,EAAmB,QAAnB;;AAEA,QAAI,WAAW,2CAAf;;AAEA,KAAC,YAAW;;AAER,aAAK,kBAAL,GAA0B,UAAS,KAAT,EAAgB,GAAhB,EAAqB,QAArB,EAA+B,MAA/B,EAAuC;AAC7D,gBAAI,CAAJ,EAAO,IAAP;AACA,gBAAI,UAAU,IAAd;AACA,gBAAI,KAAK,kBAAT;;AAEA,iBAAK,IAAE,QAAP,EAAiB,KAAI,MAArB,EAA6B,GAA7B,EAAkC;AAC9B,oBAAI,CAAC,GAAG,IAAH,CAAQ,IAAI,OAAJ,CAAY,CAAZ,CAAR,CAAL,EAA8B;AAC1B,8BAAU,KAAV;AACA;AACH;AACJ;;AAED,gBAAI,QAAQ,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAZ;AACA,iBAAK,IAAE,QAAP,EAAiB,KAAI,MAArB,EAA6B,GAA7B,EAAkC;AAC9B,uBAAO,IAAI,OAAJ,CAAY,CAAZ,CAAP;AACA,sBAAM,KAAN,CAAY,GAAZ,GAAmB,CAAnB;AACA,sBAAM,GAAN,CAAU,GAAV,GAAmB,CAAnB;AACA,sBAAM,GAAN,CAAU,MAAV,GAAmB,KAAK,MAAxB;;AAEA,oBAAI,OAAJ,CAAY,KAAZ,EAAmB,UAAU,KAAK,KAAL,CAAW,EAAX,EAAe,CAAf,CAAV,GAA8B,OAAO,IAAP,GAAc,IAA/D;AACH;AACJ,SArBD;;AAuBA,aAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B;AAChD,gBAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,CAAb;AACA,gBAAI,SAAS,KAAK,YAAL,GAAoB,aAApB,CAAkC,IAAlC,EAAwC,KAAxC,EAA+C,MAA5D;;AAEA,gBAAI,EAAE,OAAO,MAAP,IAAiB,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B,IAA1B,KAAmC,SAAtD,KACA,UAAU,OADV,IACqB,SAAS,IAAT,CAAc,IAAd,CADzB,EAEI,UAAU,GAAV;AACJ,mBAAO,MAAP;AACH,SARD;;AAUA,aAAK,YAAL,GAAoB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AAC7C,mBAAO,KAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,KAAjC,CAAP;AACH,SAFD;;AAIA,aAAK,WAAL,GAAmB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACzC,iBAAK,QAAL,CAAc,WAAd,CAA0B,GAA1B,EAA+B,GAA/B;AACH,SAFD;;AAIA,aAAK,GAAL,GAAW,gBAAX;AACH,KA5CD,EA4CG,IA5CH,CA4CQ,KAAK,SA5Cb;;AA8CA,YAAQ,IAAR,GAAe,IAAf;AACC,CAlED","file":"ocaml-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar OcamlHighlightRules = require(\"./ocaml_highlight_rules\").OcamlHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = OcamlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n    \n    this.$outdent   = new MatchingBraceOutdent();\n};\noop.inherits(Mode, TextMode);\n\nvar indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|with))\\s*$/;\n\n(function() {\n\n    this.toggleCommentLines = function(state, doc, startRow, endRow) {\n        var i, line;\n        var outdent = true;\n        var re = /^\\s*\\(\\*(.*)\\*\\)/;\n\n        for (i=startRow; i<= endRow; i++) {\n            if (!re.test(doc.getLine(i))) {\n                outdent = false;\n                break;\n            }\n        }\n\n        var range = new Range(0, 0, 0, 0);\n        for (i=startRow; i<= endRow; i++) {\n            line = doc.getLine(i);\n            range.start.row  = i;\n            range.end.row    = i;\n            range.end.column = line.length;\n\n            doc.replace(range, outdent ? line.match(re)[1] : \"(*\" + line + \"*)\");\n        }\n    };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n\n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\n            state === 'start' && indenter.test(line))\n            indent += tab;\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/ocaml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n"]}