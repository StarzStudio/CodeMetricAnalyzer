{"version":3,"sources":["pythonic_test.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAI,OAAO,OAAP,KAAmB,WAAvB,EACI,QAAQ,YAAR;;AAEJ,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,aAAa,QAAQ,WAAR,EAAqB,IAAtC;AACA,QAAI,cAAc,QAAQ,oBAAR,EAA8B,WAAhD;AACA,QAAI,SAAS,QAAQ,uBAAR,CAAb;;AAEA,WAAO,OAAP,GAAiB;;AAEb,iCAAyB,8BAAW;AAChC,gBAAI,UAAU,IAAI,WAAJ,CAAgB,CAC1B,IAD0B,EAE1B,OAF0B,EAG1B,GAH0B,EAI1B,IAJ0B,EAK1B,IAL0B,EAM1B,OAN0B,CAAhB,CAAd;;AASA,gBAAI,OAAO,IAAI,UAAJ,EAAX;AACA,oBAAQ,YAAR,CAAqB,cAArB;AACA,oBAAQ,OAAR,CAAgB,IAAhB;;AAEA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,OAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,EAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,EAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,OAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,OAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,EAAvC;;AAEA,mBAAO,KAAP,CAAa,QAAQ,kBAAR,CAA2B,CAA3B,CAAb,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD;AACA,mBAAO,KAAP,CAAa,QAAQ,kBAAR,CAA2B,CAA3B,CAAb,EAA4C,IAA5C;AACA,mBAAO,KAAP,CAAa,QAAQ,kBAAR,CAA2B,CAA3B,CAAb,EAA4C,IAA5C;AACH,SA1BY;;AA4Bb,qCAA6B,kCAAW;AACpC,gBAAI,UAAU,IAAI,WAAJ,CAAgB,CAC1B,UAD0B,EAE1B,EAF0B,EAG1B,KAH0B,EAI1B,KAJ0B,EAK1B,GAL0B,EAM1B,KAN0B,EAO1B,EAP0B,EAQ1B,GAR0B,EAS1B,EAT0B,CAAhB,CAAd;;AAYA,gBAAI,OAAO,IAAI,UAAJ,EAAX;AACA,oBAAQ,YAAR,CAAqB,cAArB;AACA,oBAAQ,OAAR,CAAgB,IAAhB;;AAEA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,OAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,EAAvC;AACA,mBAAO,KAAP,CAAa,QAAQ,aAAR,CAAsB,CAAtB,CAAb,EAAuC,OAAvC;;AAEA,mBAAO,KAAP,CAAa,QAAQ,kBAAR,CAA2B,CAA3B,CAAb,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD;AACA,mBAAO,KAAP,CAAa,QAAQ,kBAAR,CAA2B,CAA3B,CAAb,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD;AACH;AAnDY,KAAjB;AAsDC,CA7DD;;AA+DA,IAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,QAAQ,IAAxD,EACI,QAAQ,SAAR,EAAmB,IAAnB,CAAwB,QAAxB,CAAiC,OAAO,OAAxC,EAAiD,IAAjD","file":"pythonic_test-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\nif (typeof process !== \"undefined\")\n    require(\"amd-loader\");\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar PythonMode = require(\"../python\").Mode;\nvar EditSession = require(\"../../edit_session\").EditSession;\nvar assert = require(\"../../test/assertions\");\n\nmodule.exports = {\n\n    \"test: bracket folding\": function() {\n        var session = new EditSession([\n            '[ ',\n            'stuff',\n            ']',\n            '[ ',\n            '{ ',\n            '[  #-'\n        ]);\n\n        var mode = new PythonMode();\n        session.setFoldStyle(\"markbeginend\");\n        session.setMode(mode);\n\n        assert.equal(session.getFoldWidget(0), \"start\");\n        assert.equal(session.getFoldWidget(1), \"\");\n        assert.equal(session.getFoldWidget(2), \"\");\n        assert.equal(session.getFoldWidget(3), \"start\");\n        assert.equal(session.getFoldWidget(4), \"start\");\n        assert.equal(session.getFoldWidget(5), \"\");\n\n        assert.range(session.getFoldWidgetRange(0), 0, 1, 2, 0);\n        assert.equal(session.getFoldWidgetRange(3), null);\n        assert.equal(session.getFoldWidgetRange(5), null);\n    },\n\n    \"test: indentation folding\": function() {\n        var session = new EditSession([\n            'def a: #',\n            '',\n            ' b:',\n            '  c',\n            ' ',\n            '  c',\n            '',\n            ' ',\n            ''\n        ]);\n\n        var mode = new PythonMode();\n        session.setFoldStyle(\"markbeginend\");\n        session.setMode(mode);\n\n        assert.equal(session.getFoldWidget(0), \"start\");\n        assert.equal(session.getFoldWidget(1), \"\");\n        assert.equal(session.getFoldWidget(2), \"start\");\n\n        assert.range(session.getFoldWidgetRange(0), 0, 6, 5, 3);\n        assert.range(session.getFoldWidgetRange(2), 2, 3, 5, 3);\n    }\n};\n\n});\n\nif (typeof module !== \"undefined\" && module === require.main)\n    require(\"asyncjs\").test.testcase(module.exports).exec();\n"]}