{"version":3,"sources":["ruby.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,MAAM,QAAQ,YAAR,CAAV;AACA,QAAI,WAAW,QAAQ,QAAR,EAAkB,IAAjC;AACA,QAAI,qBAAqB,QAAQ,wBAAR,EAAkC,kBAA3D;AACA,QAAI,uBAAuB,QAAQ,0BAAR,EAAoC,oBAA/D;AACA,QAAI,QAAQ,QAAQ,UAAR,EAAoB,KAAhC;AACA,QAAI,kBAAkB,QAAQ,oBAAR,EAA8B,eAApD;AACA,QAAI,WAAW,QAAQ,kBAAR,EAA4B,QAA3C;;AAEA,QAAI,OAAO,SAAP,IAAO,GAAW;AAClB,aAAK,cAAL,GAAsB,kBAAtB;AACA,aAAK,QAAL,GAAgB,IAAI,oBAAJ,EAAhB;AACA,aAAK,UAAL,GAAkB,IAAI,eAAJ,EAAlB;AACA,aAAK,YAAL,GAAoB,IAAI,QAAJ,EAApB;AACH,KALD;AAMA,QAAI,QAAJ,CAAa,IAAb,EAAmB,QAAnB;;AAEA,KAAC,YAAW;;AAGR,aAAK,gBAAL,GAAwB,GAAxB;;AAEA,aAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B;AAChD,gBAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,CAAb;;AAEA,gBAAI,gBAAgB,KAAK,YAAL,GAAoB,aAApB,CAAkC,IAAlC,EAAwC,KAAxC,CAApB;AACA,gBAAI,SAAS,cAAc,MAA3B;;AAEA,gBAAI,OAAO,MAAP,IAAiB,OAAO,OAAO,MAAP,GAAc,CAArB,EAAwB,IAAxB,IAAgC,SAArD,EAAgE;AAC5D,uBAAO,MAAP;AACH;;AAED,gBAAI,SAAS,OAAb,EAAsB;AAClB,oBAAI,QAAQ,KAAK,KAAL,CAAW,iBAAX,CAAZ;AACA,oBAAI,wBAAwB,KAAK,KAAL,CAAW,6BAAX,CAA5B;AACA,oBAAI,kBAAkB,KAAK,KAAL,CAAW,yBAAX,CAAtB;AACA,oBAAI,sBAAsB,KAAK,KAAL,CAAW,uBAAX,CAA1B;AACA,oBAAI,SAAS,qBAAT,IAAkC,eAAlC,IAAqD,mBAAzD,EAA8E;AAC1E,8BAAU,GAAV;AACH;AACJ;;AAED,mBAAO,MAAP;AACH,SArBD;;AAuBA,aAAK,YAAL,GAAoB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA6B;AAC7C,mBAAO,mBAAkB,IAAlB,CAAuB,OAAO,KAA9B,KAAwC,KAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,KAAjC;AAA/C;AACH,SAFD;;AAIA,aAAK,WAAL,GAAmB,UAAS,KAAT,EAAgB,OAAhB,EAAyB,GAAzB,EAA8B;AAC7C,gBAAI,OAAO,QAAQ,OAAR,CAAgB,GAAhB,CAAX;AACA,gBAAI,IAAI,IAAJ,CAAS,IAAT,CAAJ,EACI,OAAO,KAAK,QAAL,CAAc,WAAd,CAA0B,OAA1B,EAAmC,GAAnC,CAAP;AACJ,gBAAI,SAAS,KAAK,UAAL,CAAgB,IAAhB,CAAb;AACA,gBAAI,WAAW,QAAQ,OAAR,CAAgB,MAAM,CAAtB,CAAf;AACA,gBAAI,aAAa,KAAK,UAAL,CAAgB,QAAhB,CAAjB;AACA,gBAAI,MAAM,QAAQ,YAAR,EAAV;AACA,gBAAI,WAAW,MAAX,IAAqB,OAAO,MAAhC,EAAwC;AACpC,oBAAI,OAAO,KAAP,CAAa,CAAC,IAAI,MAAlB,KAA6B,GAAjC,EACI,QAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,GAAV,EAAe,OAAO,MAAP,GAAc,IAAI,MAAjC,EAAyC,GAAzC,EAA8C,OAAO,MAArD,CAAf;AACP;AACJ,SAZD;;AAcA,aAAK,GAAL,GAAW,eAAX;AACH,KA/CD,EA+CG,IA/CH,CA+CQ,KAAK,SA/Cb;;AAiDA,YAAQ,IAAR,GAAe,IAAf;AACC,CArED","file":"ruby-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RubyHighlightRules = require(\"./ruby_highlight_rules\").RubyHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = RubyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            var startingClassOrMethod = line.match(/^\\s*(class|def|module)\\s.*$/);\n            var startingDoBlock = line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);\n            var startingConditional = line.match(/^\\s*(if|else|when)\\s*/)\n            if (match || startingClassOrMethod || startingDoBlock || startingConditional) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return /^\\s+(end|else)$/.test(line + input) || this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var line = session.getLine(row);\n        if (/}/.test(line))\n            return this.$outdent.autoOutdent(session, row);\n        var indent = this.$getIndent(line);\n        var prevLine = session.getLine(row - 1);\n        var prevIndent = this.$getIndent(prevLine);\n        var tab = session.getTabString();\n        if (prevIndent.length <= indent.length) {\n            if (indent.slice(-tab.length) == tab)\n                session.remove(new Range(row, indent.length-tab.length, row, indent.length));\n        }\n    };\n\n    this.$id = \"ace/mode/ruby\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"]}