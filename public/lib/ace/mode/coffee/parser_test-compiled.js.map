{"version":3,"sources":["parser_test.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAI,OAAO,OAAP,KAAmB,WAAvB,EAAoC;AAChC,YAAQ,YAAR;AACH;;AAED,OAAO,UAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC;AAC1C;;AAEA,QAAI,SAAS,QAAQ,uBAAR,CAAb;AACA,QAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,aAAS,cAAT,CAAwB,CAAxB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C;AACvC,YAAI,IAAI,EAAE,QAAV;AACA,eAAO,KAAP,CACI,EAAE,UAAF,GAAe,GAAf,GAAqB,EAAE,YAAvB,GAAsC,IAAtC,GAA8C,EAAE,SAAhD,GAA4D,GAA5D,GAAkE,EAAE,WADxE,EAEI,KAAK,GAAL,GAAW,EAAX,GAAgB,IAAhB,GAAwB,EAAxB,GAA6B,GAA7B,GAAmC,EAFvC;AAIH;;AAED,aAAS,KAAT,CAAe,GAAf,EAAoB;AAChB,YAAI;AACA,mBAAO,OAAP,CAAe,GAAf;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,mBAAO,CAAP;AACH;AACJ;;AAED,WAAO,OAAP,GAAiB;AACb,0CAAkC,sCAAW;AACzC,mBAAO,OAAP,CAAe,uBAAf;AACH,SAHY;;AAKb,4CAAoC,wCAAW;AAC3C,gBAAI,IAAI,MAAM,UAAN,CAAR;AACA,mBAAO,KAAP,CAAa,EAAE,OAAf,EAAwB,uBAAxB;AACA,2BAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACH,SATY;;AAWb,sCAA8B,mCAAW;AACrC,gBAAI,IAAI,MAAM,gBAAN,CAAR;AACA,mBAAO,KAAP,CAAa,EAAE,OAAf,EAAwB,WAAxB;AACA,2BAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACH,SAfY;AAgBb,kCAA0B,gCAAW;AACjC,gBAAI,IAAI,MAAM,UAAN,CAAR;AACA,mBAAO,KAAP,CAAa,EAAE,OAAf,EAAwB,wBAAxB;AACA,2BAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACH,SApBY;AAqBb,sCAA8B,oCAAW;AACrC,gBAAI,IAAI,MAAM,eAAN,CAAR;AACA,mBAAO,KAAP,CAAa,EAAE,OAAf,EAAwB,wBAAxB;AACA,2BAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACH;AAzBY,KAAjB;AA4BC,CAlDD;;AAoDA,IAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,QAAQ,IAAxD,EAA8D;AAC1D,YAAQ,SAAR,EAAmB,IAAnB,CAAwB,QAAxB,CAAiC,OAAO,OAAxC,EAAiD,IAAjD;AACH","file":"parser_test-compiled.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\nif (typeof process !== \"undefined\") {\n    require(\"amd-loader\");\n}\n\ndefine(function(require, exports, module) {\n\"use strict\";\n\nvar assert = require(\"../../test/assertions\");\nvar coffee = require(\"./coffee\");\n\nfunction assertLocation(e, sl, sc, el, ec) {\n    var l = e.location;\n    assert.equal(\n        l.first_line + \":\" + l.first_column + \"->\"  + l.last_line + \":\" + l.last_column,\n        sl + \":\" + sc + \"->\"  + el + \":\" + ec\n    );\n}\n\nfunction parse(str) {\n    try {\n        coffee.compile(str);\n    } catch (e) {\n        return e;\n    }\n}\n\nmodule.exports = {\n    \"test parse valid coffee script\": function() {\n        coffee.compile(\"square = (x) -> x * x\");\n    },\n    \n    \"test parse invalid coffee script\": function() {\n        var e = parse(\"a = 12 f\");\n        assert.equal(e.message, \"unexpected identifier\");\n        assertLocation(e, 0, 7, 0, 7);\n    },\n    \n    \"test parse missing bracket\": function() {\n        var e = parse(\"a = 12 f {\\n\\n\");\n        assert.equal(e.message, \"missing }\");\n        assertLocation(e, 0, 9, 0, 9);\n    },\n    \"test unexpected indent\": function() {\n        var e = parse(\"a\\n  a\\n\");\n        assert.equal(e.message, \"unexpected indentation\");\n        assertLocation(e, 1, 0, 1, 1);\n    },\n    \"test invalid destructuring\": function() {\n        var e = parse(\"\\n{b: 5} = {}\");\n        assert.equal(e.message, '\"5\" cannot be assigned');\n        assertLocation(e, 1, 4, 1, 4);\n    }\n};\n\n});\n\nif (typeof module !== \"undefined\" && module === require.main) {\n    require(\"asyncjs\").test.testcase(module.exports).exec();\n}\n"]}