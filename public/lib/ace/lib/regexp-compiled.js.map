{"version":3,"sources":["regexp.js"],"names":[],"mappings":"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","file":"regexp-compiled.js","sourcesContent":["/*\n *  Based on code from:\n *\n * XRegExp 1.5.0\n * (c) 2007-2010 Steven Levithan\n * MIT License\n * <http://xregexp.com>\n * Provides an augmented, extensible, cross-browser implementation of regular expressions,\n * including support for additional syntax, flags, and methods\n */\n \ndefine(function(require, exports, module) {\n\"use strict\";\n\n    //---------------------------------\n    //  Private variables\n    //---------------------------------\n\n    var real = {\n            exec: RegExp.prototype.exec,\n            test: RegExp.prototype.test,\n            match: String.prototype.match,\n            replace: String.prototype.replace,\n            split: String.prototype.split\n        },\n        compliantExecNpcg = real.exec.call(/()??/, \"\")[1] === undefined, // check `exec` handling of nonparticipating capturing groups\n        compliantLastIndexIncrement = function () {\n            var x = /^/g;\n            real.test.call(x, \"\");\n            return !x.lastIndex;\n        }();\n\n    if (compliantLastIndexIncrement && compliantExecNpcg)\n        return;\n\n    //---------------------------------\n    //  Overriden native methods\n    //---------------------------------\n\n    // Adds named capture support (with backreferences returned as `result.name`), and fixes two\n    // cross-browser issues per ES3:\n    // - Captured values for nonparticipating capturing groups should be returned as `undefined`,\n    //   rather than the empty string.\n    // - `lastIndex` should not be incremented after zero-length matches.\n    RegExp.prototype.exec = function (str) {\n        var match = real.exec.apply(this, arguments),\n            name, r2;\n        if ( typeof(str) == 'string' && match) {\n            // Fix browsers whose `exec` methods don't consistently return `undefined` for\n            // nonparticipating capturing groups\n            if (!compliantExecNpcg && match.length > 1 && indexOf(match, \"\") > -1) {\n                r2 = RegExp(this.source, real.replace.call(getNativeFlags(this), \"g\", \"\"));\n                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n                // matching due to characters outside the match\n                real.replace.call(str.slice(match.index), r2, function () {\n                    for (var i = 1; i < arguments.length - 2; i++) {\n                        if (arguments[i] === undefined)\n                            match[i] = undefined;\n                    }\n                });\n            }\n            // Attach named capture properties\n            if (this._xregexp && this._xregexp.captureNames) {\n                for (var i = 1; i < match.length; i++) {\n                    name = this._xregexp.captureNames[i - 1];\n                    if (name)\n                       match[name] = match[i];\n                }\n            }\n            // Fix browsers that increment `lastIndex` after zero-length matches\n            if (!compliantLastIndexIncrement && this.global && !match[0].length && (this.lastIndex > match.index))\n                this.lastIndex--;\n        }\n        return match;\n    };\n\n    // Don't override `test` if it won't change anything\n    if (!compliantLastIndexIncrement) {\n        // Fix browser bug in native method\n        RegExp.prototype.test = function (str) {\n            // Use the native `exec` to skip some processing overhead, even though the overriden\n            // `exec` would take care of the `lastIndex` fix\n            var match = real.exec.call(this, str);\n            // Fix browsers that increment `lastIndex` after zero-length matches\n            if (match && this.global && !match[0].length && (this.lastIndex > match.index))\n                this.lastIndex--;\n            return !!match;\n        };\n    }\n\n    //---------------------------------\n    //  Private helper functions\n    //---------------------------------\n\n    function getNativeFlags (regex) {\n        return (regex.global     ? \"g\" : \"\") +\n               (regex.ignoreCase ? \"i\" : \"\") +\n               (regex.multiline  ? \"m\" : \"\") +\n               (regex.extended   ? \"x\" : \"\") + // Proposed for ES4; included in AS3\n               (regex.sticky     ? \"y\" : \"\");\n    }\n\n    function indexOf (array, item, from) {\n        if (Array.prototype.indexOf) // Use the native array method if available\n            return array.indexOf(item, from);\n        for (var i = from || 0; i < array.length; i++) {\n            if (array[i] === item)\n                return i;\n        }\n        return -1;\n    }\n\n});\n"]}