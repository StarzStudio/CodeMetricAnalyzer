{"version":3,"sources":["springyui.js"],"names":[],"mappings":"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","file":"springyui-compiled.js","sourcesContent":["/**\nCopyright (c) 2010 Dennis Hotson\n\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function() {\n\njQuery.fn.springy = function(params) {\n\tvar graph = this.graph = params.graph || new Springy.Graph();\n\tvar nodeFont = \"16px Verdana, sans-serif\";\n\tvar edgeFont = \"8px Verdana, sans-serif\";\n\tvar stiffness = params.stiffness || 400.0;\n\tvar repulsion = params.repulsion || 400.0;\n\tvar damping = params.damping || 0.5;\n\tvar minEnergyThreshold = params.minEnergyThreshold || 0.00001;\n\tvar nodeSelected = params.nodeSelected || null;\n\tvar nodeImages = {};\n\tvar edgeLabelsUpright = true;\n\n\tvar canvas = this[0];\n\tvar ctx = canvas.getContext(\"2d\");\n\n\tvar layout = this.layout = new Springy.Layout.ForceDirected(graph, stiffness, repulsion, damping, minEnergyThreshold);\n\n\t// calculate bounding box of graph layout.. with ease-in\n\tvar currentBB = layout.getBoundingBox();\n\tvar targetBB = {bottomleft: new Springy.Vector(-2, -2), topright: new Springy.Vector(2, 2)};\n\n\t// auto adjusting bounding box\n\tSpringy.requestAnimationFrame(function adjust() {\n\t\ttargetBB = layout.getBoundingBox();\n\t\t// current gets 20% closer to target every iteration\n\t\tcurrentBB = {\n\t\t\tbottomleft: currentBB.bottomleft.add( targetBB.bottomleft.subtract(currentBB.bottomleft)\n\t\t\t\t.divide(10)),\n\t\t\ttopright: currentBB.topright.add( targetBB.topright.subtract(currentBB.topright)\n\t\t\t\t.divide(10))\n\t\t};\n\n\t\tSpringy.requestAnimationFrame(adjust);\n\t});\n\n\t// convert to/from screen coordinates\n\tvar toScreen = function(p) {\n\t\tvar size = currentBB.topright.subtract(currentBB.bottomleft);\n\t\tvar sx = p.subtract(currentBB.bottomleft).divide(size.x).x * canvas.width;\n\t\tvar sy = p.subtract(currentBB.bottomleft).divide(size.y).y * canvas.height;\n\t\treturn new Springy.Vector(sx, sy);\n\t};\n\n\tvar fromScreen = function(s) {\n\t\tvar size = currentBB.topright.subtract(currentBB.bottomleft);\n\t\tvar px = (s.x / canvas.width) * size.x + currentBB.bottomleft.x;\n\t\tvar py = (s.y / canvas.height) * size.y + currentBB.bottomleft.y;\n\t\treturn new Springy.Vector(px, py);\n\t};\n\n\t// half-assed drag and drop\n\tvar selected = null;\n\tvar nearest = null;\n\tvar dragged = null;\n\n\tjQuery(canvas).mousedown(function(e) {\n\t\tvar pos = jQuery(this).offset();\n\t\tvar p = fromScreen({x: e.pageX - pos.left, y: e.pageY - pos.top});\n\t\tselected = nearest = dragged = layout.nearest(p);\n\n\t\tif (selected.node !== null) {\n\t\t\tdragged.point.m = 10000.0;\n\n\t\t\tif (nodeSelected) {\n\t\t\t\tnodeSelected(selected.node);\n\t\t\t}\n\t\t}\n\n\t\trenderer.start();\n\t});\n\n\t// Basic double click handler\n\tjQuery(canvas).dblclick(function(e) {\n\t\tvar pos = jQuery(this).offset();\n\t\tvar p = fromScreen({x: e.pageX - pos.left, y: e.pageY - pos.top});\n\t\tselected = layout.nearest(p);\n\t\tnode = selected.node;\n\t\tif (node && node.data && node.data.ondoubleclick) {\n\t\t\tnode.data.ondoubleclick();\n\t\t}\n\t});\n\n\tjQuery(canvas).mousemove(function(e) {\n\t\tvar pos = jQuery(this).offset();\n\t\tvar p = fromScreen({x: e.pageX - pos.left, y: e.pageY - pos.top});\n\t\tnearest = layout.nearest(p);\n\n\t\tif (dragged !== null && dragged.node !== null) {\n\t\t\tdragged.point.p.x = p.x;\n\t\t\tdragged.point.p.y = p.y;\n\t\t}\n\n\t\trenderer.start();\n\t});\n\n\tjQuery(window).bind('mouseup',function(e) {\n\t\tdragged = null;\n\t});\n\n\tvar getTextWidth = function(node) {\n\t\tvar text = (node.data.label !== undefined) ? node.data.label : node.id;\n\t\tif (node._width && node._width[text])\n\t\t\treturn node._width[text];\n\n\t\tctx.save();\n\t\tctx.font = (node.data.font !== undefined) ? node.data.font : nodeFont;\n\t\tvar width = ctx.measureText(text).width;\n\t\tctx.restore();\n\n\t\tnode._width || (node._width = {});\n\t\tnode._width[text] = width;\n\n\t\treturn width;\n\t};\n\n\tvar getTextHeight = function(node) {\n\t\treturn 16;\n\t\t// In a more modular world, this would actually read the font size, but I think leaving it a constant is sufficient for now.\n\t\t// If you change the font size, I'd adjust this too.\n\t};\n\n\tvar getImageWidth = function(node) {\n\t\tvar width = (node.data.image.width !== undefined) ? node.data.image.width : nodeImages[node.data.image.src].object.width;\n\t\treturn width;\n\t}\n\n\tvar getImageHeight = function(node) {\n\t\tvar height = (node.data.image.height !== undefined) ? node.data.image.height : nodeImages[node.data.image.src].object.height;\n\t\treturn height;\n\t}\n\n\tSpringy.Node.prototype.getHeight = function() {\n\t\tvar height;\n\t\tif (this.data.image == undefined) {\n\t\t\theight = getTextHeight(this);\n\t\t} else {\n\t\t\tif (this.data.image.src in nodeImages && nodeImages[this.data.image.src].loaded) {\n\t\t\t\theight = getImageHeight(this);\n\t\t\t} else {height = 10;}\n\t\t}\n\t\treturn height;\n\t}\n\n\tSpringy.Node.prototype.getWidth = function() {\n\t\tvar width;\n\t\tif (this.data.image == undefined) {\n\t\t\twidth = getTextWidth(this);\n\t\t} else {\n\t\t\tif (this.data.image.src in nodeImages && nodeImages[this.data.image.src].loaded) {\n\t\t\t\twidth = getImageWidth(this);\n\t\t\t} else {width = 10;}\n\t\t}\n\t\treturn width;\n\t}\n\n\tvar renderer = this.renderer = new Springy.Renderer(layout,\n\t\tfunction clear() {\n\t\t\tctx.clearRect(0,0,canvas.width,canvas.height);\n\t\t},\n\t\tfunction drawEdge(edge, p1, p2) {\n\t\t\tvar x1 = toScreen(p1).x;\n\t\t\tvar y1 = toScreen(p1).y;\n\t\t\tvar x2 = toScreen(p2).x;\n\t\t\tvar y2 = toScreen(p2).y;\n\n\t\t\tvar direction = new Springy.Vector(x2-x1, y2-y1);\n\t\t\tvar normal = direction.normal().normalise();\n\n\t\t\tvar from = graph.getEdges(edge.source, edge.target);\n\t\t\tvar to = graph.getEdges(edge.target, edge.source);\n\n\t\t\tvar total = from.length + to.length;\n\n\t\t\t// Figure out edge's position in relation to other edges between the same nodes\n\t\t\tvar n = 0;\n\t\t\tfor (var i=0; i<from.length; i++) {\n\t\t\t\tif (from[i].id === edge.id) {\n\t\t\t\t\tn = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//change default to  10.0 to allow text fit between edges\n\t\t\tvar spacing = 12.0;\n\n\t\t\t// Figure out how far off center the line should be drawn\n\t\t\tvar offset = normal.multiply(-((total - 1) * spacing)/2.0 + (n * spacing));\n\n\t\t\tvar paddingX = 6;\n\t\t\tvar paddingY = 6;\n\n\t\t\tvar s1 = toScreen(p1).add(offset);\n\t\t\tvar s2 = toScreen(p2).add(offset);\n\n\t\t\tvar boxWidth = edge.target.getWidth() + paddingX;\n\t\t\tvar boxHeight = edge.target.getHeight() + paddingY;\n\n\t\t\tvar intersection = intersect_line_box(s1, s2, {x: x2-boxWidth/2.0, y: y2-boxHeight/2.0}, boxWidth, boxHeight);\n\n\t\t\tif (!intersection) {\n\t\t\t\tintersection = s2;\n\t\t\t}\n\n\t\t\tvar stroke = (edge.data.color !== undefined) ? edge.data.color : '#000000';\n\n\t\t\tvar arrowWidth;\n\t\t\tvar arrowLength;\n\n\t\t\tvar weight = (edge.data.weight !== undefined) ? edge.data.weight : 1.0;\n\n\t\t\tctx.lineWidth = Math.max(weight *  2, 0.1);\n\t\t\tarrowWidth = 1 + ctx.lineWidth;\n\t\t\tarrowLength = 8;\n\n\t\t\tvar directional = (edge.data.directional !== undefined) ? edge.data.directional : true;\n\n\t\t\t// line\n\t\t\tvar lineEnd;\n\t\t\tif (directional) {\n\t\t\t\tlineEnd = intersection.subtract(direction.normalise().multiply(arrowLength * 0.5));\n\t\t\t} else {\n\t\t\t\tlineEnd = s2;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = stroke;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(s1.x, s1.y);\n\t\t\tctx.lineTo(lineEnd.x, lineEnd.y);\n\t\t\tctx.stroke();\n\n\t\t\t// arrow\n\t\t\tif (directional) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.fillStyle = stroke;\n\t\t\t\tctx.translate(intersection.x, intersection.y);\n\t\t\t\tctx.rotate(Math.atan2(y2 - y1, x2 - x1));\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(-arrowLength, arrowWidth);\n\t\t\t\tctx.lineTo(0, 0);\n\t\t\t\tctx.lineTo(-arrowLength, -arrowWidth);\n\t\t\t\tctx.lineTo(-arrowLength * 0.8, -0);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// label\n\t\t\tif (edge.data.label !== undefined) {\n\t\t\t\ttext = edge.data.label\n\t\t\t\tctx.save();\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"top\";\n\t\t\t\tctx.font = (edge.data.font !== undefined) ? edge.data.font : edgeFont;\n\t\t\t\tctx.fillStyle = stroke;\n\t\t\t\tvar angle = Math.atan2(s2.y - s1.y, s2.x - s1.x);\n\t\t\t\tvar displacement = -8;\n\t\t\t\tif (edgeLabelsUpright && (angle > Math.PI/2 || angle < -Math.PI/2)) {\n\t\t\t\t\tdisplacement = 8;\n\t\t\t\t\tangle += Math.PI;\n\t\t\t\t}\n\t\t\t\tvar textPos = s1.add(s2).divide(2).add(normal.multiply(displacement));\n\t\t\t\tctx.translate(textPos.x, textPos.y);\n\t\t\t\tctx.rotate(angle);\n\t\t\t\tctx.fillText(text, 0,-2);\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t},\n\t\tfunction drawNode(node, p) {\n\t\t\tvar s = toScreen(p);\n\n\t\t\tctx.save();\n\n\t\t\t// Pulled out the padding aspect sso that the size functions could be used in multiple places\n\t\t\t// These should probably be settable by the user (and scoped higher) but this suffices for now\n\t\t\tvar paddingX = 6;\n\t\t\tvar paddingY = 6;\n\n\t\t\tvar contentWidth = node.getWidth();\n\t\t\tvar contentHeight = node.getHeight();\n\t\t\tvar boxWidth = contentWidth + paddingX;\n\t\t\tvar boxHeight = contentHeight + paddingY;\n\n\t\t\t// clear background\n\t\t\tctx.clearRect(s.x - boxWidth/2, s.y - boxHeight/2, boxWidth, boxHeight);\n\n\t\t\t// fill background\n\t\t\tif (selected !== null && selected.node !== null && selected.node.id === node.id) {\n\t\t\t\tctx.fillStyle = \"#FFFFE0\";\n\t\t\t} else if (nearest !== null && nearest.node !== null && nearest.node.id === node.id) {\n\t\t\t\tctx.fillStyle = \"#EEEEEE\";\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = \"#FFFFFF\";\n\t\t\t}\n\t\t\tctx.fillRect(s.x - boxWidth/2, s.y - boxHeight/2, boxWidth, boxHeight);\n\n\t\t\tif (node.data.image == undefined) {\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"top\";\n\t\t\t\tctx.font = (node.data.font !== undefined) ? node.data.font : nodeFont;\n\t\t\t\tctx.fillStyle = (node.data.color !== undefined) ? node.data.color : \"#000000\";\n\t\t\t\tvar text = (node.data.label !== undefined) ? node.data.label : node.id;\n\t\t\t\tctx.fillText(text, s.x - contentWidth/2, s.y - contentHeight/2);\n\t\t\t} else {\n\t\t\t\t// Currently we just ignore any labels if the image object is set. One might want to extend this logic to allow for both, or other composite nodes.\n\t\t\t\tvar src = node.data.image.src;  // There should probably be a sanity check here too, but un-src-ed images aren't exaclty a disaster.\n\t\t\t\tif (src in nodeImages) {\n\t\t\t\t\tif (nodeImages[src].loaded) {\n\t\t\t\t\t\t// Our image is loaded, so it's safe to draw\n\t\t\t\t\t\tctx.drawImage(nodeImages[src].object, s.x - contentWidth/2, s.y - contentHeight/2, contentWidth, contentHeight);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// First time seeing an image with this src address, so add it to our set of image objects\n\t\t\t\t\t// Note: we index images by their src to avoid making too many duplicates\n\t\t\t\t\tnodeImages[src] = {};\n\t\t\t\t\tvar img = new Image();\n\t\t\t\t\tnodeImages[src].object = img;\n\t\t\t\t\timg.addEventListener(\"load\", function () {\n\t\t\t\t\t\t// HTMLImageElement objects are very finicky about being used before they are loaded, so we set a flag when it is done\n\t\t\t\t\t\tnodeImages[src].loaded = true;\n\t\t\t\t\t});\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t);\n\n\trenderer.start();\n\n\t// helpers for figuring out where to draw arrows\n\tfunction intersect_line_line(p1, p2, p3, p4) {\n\t\tvar denom = ((p4.y - p3.y)*(p2.x - p1.x) - (p4.x - p3.x)*(p2.y - p1.y));\n\n\t\t// lines are parallel\n\t\tif (denom === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar ua = ((p4.x - p3.x)*(p1.y - p3.y) - (p4.y - p3.y)*(p1.x - p3.x)) / denom;\n\t\tvar ub = ((p2.x - p1.x)*(p1.y - p3.y) - (p2.y - p1.y)*(p1.x - p3.x)) / denom;\n\n\t\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn new Springy.Vector(p1.x + ua * (p2.x - p1.x), p1.y + ua * (p2.y - p1.y));\n\t}\n\n\tfunction intersect_line_box(p1, p2, p3, w, h) {\n\t\tvar tl = {x: p3.x, y: p3.y};\n\t\tvar tr = {x: p3.x + w, y: p3.y};\n\t\tvar bl = {x: p3.x, y: p3.y + h};\n\t\tvar br = {x: p3.x + w, y: p3.y + h};\n\n\t\tvar result;\n\t\tif (result = intersect_line_line(p1, p2, tl, tr)) { return result; } // top\n\t\tif (result = intersect_line_line(p1, p2, tr, br)) { return result; } // right\n\t\tif (result = intersect_line_line(p1, p2, br, bl)) { return result; } // bottom\n\t\tif (result = intersect_line_line(p1, p2, bl, tl)) { return result; } // left\n\n\t\treturn false;\n\t}\n\n\treturn this;\n}\n\n})();\n"]}