{"version":3,"sources":["express-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AAAA,IACI,SAAS,QAAQ,QAAR,CADb;AAAA,IAEI,WAAW,QAAQ,aAAR,CAFf;;AAGI;AACJ,aAAa,QAAQ,aAAR,CAJb;AAAA,IAKI,iBAAiB,QAAQ,iBAAR,CALrB;AAAA,IAMI,UAAU,QAAQ,iBAAR,CANd;AAAA,IAOI,WAAW,QAAQ,UAAR,CAPf;AAAA,IAQI,KAAK,QAAQ,IAAR,CART;;AAUA,OAAO,OAAP,GAAiB,YAAY;AACzB,QAAI,MAAM,SAAV;;AAEA,QAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,YAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR,EADwC,CAChB;AAC3B,KAFD,MAEO,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AAC9C,YAAI,GAAJ,CAAQ,OAAO,QAAP,CAAR,EAD8C,CACnB;AAC3B,YAAI,GAAJ,CAAQ,UAAR;AACH;;AAED,QAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB;AAC1B,kBAAU,IADgB,CACX;AADW,KAAtB,CAAR;;AAIA,QAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,QAAI,GAAJ,CAAQ,gBAAR;;AAEA;AACA,QAAI,GAAJ,CAAQ,QAAQ;AACZ,2BAAmB,IADP;AAEZ,gBAAQ,IAFI;AAGZ,gBAAQ,OAAO;AAHH,KAAR,CAAR;;AAMA,QAAI,GAAJ,CAAQ,OAAR,EAAiB,aAAjB;AACA,QAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA,QAAI,GAAJ,CAAQ,SAAS,UAAT,EAAR;AACA,QAAI,GAAJ,CAAQ,SAAS,OAAT,EAAR;;AAEA,YAAQ,sCAAR,EAAgD,GAAhD;AACA,YAAQ,sCAAR,EAAgD,GAAhD;;AAEA,QAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,UAAf,CAAR;;AAEA,WAAO,GAAP;AACH,CApCD;;AAsCA","file":"express-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar config = require('./config');\nvar express = require('express'),\n    morgan = require('morgan'),\n    compress = require('compression'),\n    // gzip compression\nbodyParser = require('body-parser'),\n    methodOverride = require('method-override'),\n    session = require('express-session'),\n    passport = require('passport'),\n    fs = require('fs');\n\nmodule.exports = function () {\n    var app = express();\n\n    if (process.env.NODE_ENV === 'development') {\n        app.use(morgan('dev')); //:method :url :status :response-time ms - :res[content-length]\n    } else if (process.env.NODE_ENV === 'production') {\n        app.use(morgan('common')); // remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]\n        app.use(compress());\n    }\n\n    app.use(bodyParser.urlencoded({\n        extended: true // req will contain key-value pairs, where the value can be a string or array (when extended is false), or any type (when extended is true).\n    }));\n\n    app.use(bodyParser.json());\n    app.use(methodOverride());\n\n    // session data is stored in the server, only session ID is stored in the cookie\n    app.use(session({\n        saveUninitialized: true,\n        resave: true,\n        secret: config.sessionSecret\n    }));\n\n    app.set('views', './app/views');\n    app.set('view engine', 'ejs');\n\n    app.use(passport.initialize());\n    app.use(passport.session());\n\n    require('../app/routes/index.server.routes.js')(app);\n    require('../app/routes/users.server.routes.js')(app);\n\n    app.use(express.static('./public'));\n\n    return app;\n};\n\n//# sourceMappingURL=express-compiled.js.map"]}